VIEW "KOBA_ACTIVO_FIJO" AS 
SELECT EJERCICIO, MES, CAST(ACTIVO_FIJO AS NUMERIC) ACTIVO, CEBE, DIVISION, DENOMINACION_ACTIVO_FIJO, CLASE_ACTIVO_FIJO, CUENTA, CUENTA_DEPRECIACION, VIDA_UTIL, VIDA_UTIL_PER, 
	FECHA_CAPITALIZADO, 
	CASE WHEN TO_INTEGER(EJERCICIO_ALTA)<TO_INTEGER(EJERCICIO) THEN EJERCICIO_ALTA 
		 WHEN TO_INTEGER(EJERCICIO_ALTA)=TO_INTEGER(EJERCICIO) AND TO_INTEGER(MES_ALTA)<=TO_INTEGER(MES) THEN EJERCICIO_ALTA ELSE '0000' END AS EJERCICIO_ALTA,
	CASE WHEN TO_INTEGER(EJERCICIO_ALTA)<TO_INTEGER(EJERCICIO) THEN TO_INTEGER(MES_ALTA) 
		 WHEN TO_INTEGER(EJERCICIO_ALTA)=TO_INTEGER(EJERCICIO) AND TO_INTEGER(MES_ALTA)<=TO_INTEGER(MES) THEN TO_INTEGER(MES_ALTA) ELSE 0 END AS MES_ALTA,
	CASE WHEN YEAR(FECHA_CAPITALIZADO)=TO_INTEGER(EJERCICIO) AND MONTH(FECHA_CAPITALIZADO)=TO_INTEGER(MES) THEN 'MES ALTA'
		 WHEN YEAR(FECHA_CAPITALIZADO)<TO_INTEGER(EJERCICIO) AND E_ALTA='SI' THEN 'MES ADICIONAL' 
		 WHEN YEAR(FECHA_CAPITALIZADO)=TO_INTEGER(EJERCICIO) AND MONTH(FECHA_CAPITALIZADO)<=TO_INTEGER(MES) AND E_ALTA='SI' THEN 'MES ADICIONAL' ELSE '' END ESTADO_ALTA,
	IFNULL (DESCAPITALIZACION, '') DESCAPITALIZACION, 
	CASE WHEN TO_INTEGER(EJERCICIO_BAJA)=TO_INTEGER(EJERCICIO) AND TO_INTEGER(MES_BAJA)<=TO_INTEGER(MES) THEN TO_VARCHAR(EJERCICIO_BAJA) ELSE '0000' END AS EJERCICIO_BAJA,
	CASE WHEN TO_INTEGER(EJERCICIO_BAJA)=TO_INTEGER(EJERCICIO) AND TO_INTEGER(MES_BAJA)<=TO_INTEGER(MES) THEN MES_BAJA ELSE '0' END AS MES_BAJA,
	CASE WHEN DESCAPITALIZACION IS NULL AND VL_BAJA!=0 THEN 'BAJA PARCIAL' 
		 WHEN YEAR(TO_DATE(DESCAPITALIZACION))=TO_INTEGER(EJERCICIO) AND MONTH(TO_DATE(DESCAPITALIZACION))<=TO_INTEGER(MES) THEN 'BAJA TOTAL' ELSE '' END ESTADO_BAJA,
	VL_CAP_INI_EJERCICIO, VL_AMO_INI_EJERCICIO, VL_ALTA, VL_BAJA, VL_TRASLADO, VL_AMO_EJERCICIO, VL_AMO_BAJA, VL_TOTAL_BAJA,  VL_AMO_TRASLADO, 
	--CASE WHEN VL_AMO_ACUMULADA=0 THEN 0 ELSE (VL_AMO_ACUMULADA+VL_AMO_BAJA+VL_AMO_TRASLADO) END AS VL_AMO_ACUMULADA,
	--CASE WHEN VL_AMO_ACUMULADA=0 THEN 0 ELSE (VL_CAP_INI_EJERCICIO+VL_ALTA+VL_BAJA+VL_TRASLADO+(VL_AMO_ACUMULADA+VL_AMO_BAJA+VL_AMO_TRASLADO)) END AS VAL_CONT_ACTIVO
	(VL_AMO_ACUMULADA+VL_AMO_BAJA+VL_AMO_TRASLADO) VL_AMO_ACUMULADA,
	(VL_CAP_INI_EJERCICIO+VL_ALTA+VL_BAJA+VL_TRASLADO+(VL_AMO_ACUMULADA+VL_AMO_BAJA+VL_AMO_TRASLADO)) VAL_CONT_ACTIVO
FROM (SELECT EJERCICIO, MES, ACTIVO_FIJO, CEBE, DIVISION, DENOMINACION_ACTIVO_FIJO, CLASE_ACTIVO_FIJO, CUENTA, CUENTA_DEPRECIACION, VIDA_UTIL, VIDA_UTIL_PER, FECHA_CAPITALIZADO, 
		EJERCICIO_ALTA, MES_ALTA, DESCAPITALIZACION, EJERCICIO_BAJA, MES_BAJA, VL_CAP_INI_EJERCICIO, VL_AMO_INI_EJERCICIO, E_ALTA,
		(SUM(SUM(ALTA)) OVER (PARTITION BY ACTIVO_FIJO, EJERCICIO ORDER BY EJERCICIO, MES)) VL_ALTA,
		(SUM(SUM(BAJA)) OVER (PARTITION BY ACTIVO_FIJO, EJERCICIO ORDER BY EJERCICIO, MES)) VL_BAJA, 
		(SUM(SUM(TRASLADO)) OVER (PARTITION BY ACTIVO_FIJO, EJERCICIO ORDER BY EJERCICIO, MES)) VL_TRASLADO, VL_AMO_EJERCICIO,
		(SUM(SUM(VL_AMO_BAJA)) OVER (PARTITION BY ACTIVO_FIJO, EJERCICIO ORDER BY EJERCICIO, MES)) VL_AMO_BAJA,
		(SUM(SUM(VL_TOTAL_BAJA)) OVER (PARTITION BY ACTIVO_FIJO, EJERCICIO ORDER BY EJERCICIO, MES)) VL_TOTAL_BAJA, 
		(SUM(SUM(VL_AMO_TRASLADO)) OVER (PARTITION BY ACTIVO_FIJO, EJERCICIO ORDER BY EJERCICIO, MES)) VL_AMO_TRASLADO, VL_AMO_ACUMULADA
	FROM (SELECT EJERCICIO, MES, ACTIVO_FIJO, CEBE, DIVISION, DENOMINACION_ACTIVO_FIJO, CLASE_ACTIVO_FIJO, CUENTA, CUENTA_DEPRECIACION, VIDA_UTIL, VIDA_UTIL_PER, 
			TO_VARCHAR(FECHA_CAPITALIZADO,'YYYY/MM/DD') FECHA_CAPITALIZADO, EJERCICIO_ALTA, MES_ALTA, 
			TO_VARCHAR(DESCAPITALIZACION,'YYYY/MM/DD') DESCAPITALIZACION, EJERCICIO_BAJA, MES_BAJA, VL_CAP_INI_EJERCICIO, VL_AMO_INI_EJERCICIO, 
			SUM(CASE WHEN AN.ALTA IS NULL THEN 0 ELSE AN.ALTA END) ALTA, 
			CASE WHEN AN.ALTA IS NULL THEN 'NO' WHEN AN.ALTA=0 THEN 'NO' ELSE 'SI' END E_ALTA,
			SUM(CASE WHEN AN.BAJA IS NULL THEN 0 ELSE AN.BAJA END) BAJA, 
			SUM(CASE WHEN AN.TRASLADO IS NULL THEN 0 ELSE AN.TRASLADO END) TRASLADO, VL_AMO_EJERCICIO,
			SUM(CASE WHEN AN.VL_AMO_BAJA IS NULL THEN 0 ELSE AN.VL_AMO_BAJA END) VL_AMO_BAJA, 
			SUM(CASE WHEN AN.VL_TOTAL_BAJA IS NULL THEN 0 ELSE AN.VL_TOTAL_BAJA END) VL_TOTAL_BAJA, 
			SUM(CASE WHEN AN.VALOR_AMO_TRASLADO IS NULL THEN 0 ELSE AN.VALOR_AMO_TRASLADO END) VL_AMO_TRASLADO,
			(VL_AMO_INI_EJERCICIO+VL_AMO_EJERCICIO) VL_AMO_ACUMULADA
		FROM VW_CALCULAR_VL_AMO_EJERCICIO_V2 V1
		LEFT JOIN VW_CALCULO_ABT_ACTIVO AN ON V1.ACTIVO_FIJO=AN.ANLN1 AND V1.EJERCICIO=AN.GJAHR AND TO_INTEGER(V1.MES)=AN.PERIODO 
		WHERE MES!=0 --AND ACTIVO_FIJO='004316003386' AND EJERCICIO='2020' 
		GROUP BY EJERCICIO, MES, ACTIVO_FIJO, CEBE, DIVISION, DENOMINACION_ACTIVO_FIJO, CLASE_ACTIVO_FIJO, CUENTA, CUENTA_DEPRECIACION, VIDA_UTIL, VIDA_UTIL_PER, FECHA_CAPITALIZADO, 
			EJERCICIO_ALTA, MES_ALTA, DESCAPITALIZACION, EJERCICIO_BAJA, MES_BAJA, VL_CAP_INI_EJERCICIO, VL_AMO_INI_EJERCICIO, VL_AMO_EJERCICIO, AN.ALTA)
	GROUP BY EJERCICIO, MES, ACTIVO_FIJO, CEBE, DIVISION, DENOMINACION_ACTIVO_FIJO, CLASE_ACTIVO_FIJO, CUENTA, CUENTA_DEPRECIACION, VIDA_UTIL, VIDA_UTIL_PER, FECHA_CAPITALIZADO, 
		EJERCICIO_ALTA, MES_ALTA, DESCAPITALIZACION, EJERCICIO_BAJA, MES_BAJA, VL_CAP_INI_EJERCICIO, VL_AMO_INI_EJERCICIO, VL_AMO_EJERCICIO, VL_AMO_ACUMULADA, E_ALTA);