PROCEDURE "SP_BALANCE_VS_MOVIMIENTO"(PERIODO INT, TIPO VARCHAR(10), CUENTA VARCHAR(10))
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   READS SQL DATA AS
BEGIN
   /*************************************
       Esta consulta permite verificar si los saldos de cuentas de PyG y Balance de un periodo Coinciden con su movimiento en el mismo periodo
       Ejemplo: CALL KOBA_HDI_DB_1.SP_BALANCE_VS_MOVIMIENTO(202101)
       
       En caso de encontrar diferencias puede realizar las siguientes acciones: 
       
       CALL KOBA_HDI_DB_1.SP_DIM_DOCFI_LOAD_V001('F','20210101','20210131');
       
       Este proceso carga los documentos que por alg√∫n error de HANA o CPI-DI no fueron cargados a la base de datos.
       Posteriormente entrar a CPI-DI y correr el proceso en Productivo KOBA: 2_P_FINANZAS
       
   *************************************/
    DECLARE EJERCICIO SMALLINT = TO_INT(LEFT(TO_VARCHAR(:PERIODO),4));
    DECLARE FISCPER DATE = LAST_DAY(TO_VARCHAR(:PERIODO)||'01');

	IF :TIPO = 'TOTAL' THEN    
		SELECT :PERIODO "PERIODO", 
				CTA.CD_CUENTA CUENTA,
				CTA.NM_CUENTA CUENTA_T,
				CTA.CD_CLASE CLASE,
				(CASE WHEN CTA.TIPO_INFORME = 'B' THEN 'BALANCE' ELSE 'PYG'  END) TIPO_INFORME,
				Sum("BALANCE") "BALANCE", 
				Sum(MOVIMIENTO) MOVIMIENTO,  
				Sum(MOVIMIENTO)-Sum("BALANCE") DIFERENCIA,
				Sum(DEBITO) DEBITO,
				Sum(DEBITO_MOV) DEBITO_MOV,
				Sum(CREDITO) CREDITO,
				Sum(CREDITO_MOV) CREDITO_MOV,
				Sum(DEBITO)-Sum(DEBITO_MOV) DIFERENCIA_DEBITO,
				Sum(CREDITO)+Sum(CREDITO_MOV) DIFERENCIA_CREDITO,
				(CASE WHEN (Sum(CREDITO)+Sum(CREDITO_MOV))!=0 
					 OR Sum(DEBITO)-Sum(DEBITO_MOV) != 0 
					 OR (Sum(MOVIMIENTO)-Sum("BALANCE")) !=0 THEN 'SI' ELSE 'NO'
				END) HAY_DIFERENCIA,
				Sum(MOVIMIENTO_BSEG) MOVIMIENTO_BSEG,
				Sum(MOVIMIENTO_BSEG)-Sum("BALANCE") DIFERENCIA_BSEG
		FROM (
		SELECT FT.CD_DW_CUENTA, Sum(FT.VL_HSL*100) MOVIMIENTO, 0 "BALANCE", 0 DEBITO, 0 CREDITO,
	    		Sum(CASE WHEN "CD_DRCRK"='S' THEN "VL_HSL"*100 ELSE 0 END) DEBITO_MOV, --AND DOC.CD_BLART IN ('I1','WI')
				Sum(CASE WHEN "CD_DRCRK"='H' THEN "VL_HSL"*100 ELSE 0 END) CREDITO_MOV, --AND DOC.CD_BLART IN ('I1','WI')
				0 MOVIMIENTO_BSEG
		FROM DIM_DOCFI DOC
		INNER JOIN FT_FIGLITEM FT 
			ON FT.CD_DW_BELNR = DOC.CD_DW_BKPF
		WHERE DOC.CD_EJERCICIO = :EJERCICIO  
		AND FT.CD_PERIODO = :PERIODO
		AND DOC.CD_BLART IN ( SELECT CD_DIMENSION FROM ETL_TRADUCCION WHERE CD_TABLA = 2 )
		AND DOC.BSTAT = ''
		AND FT.CD_DW_CUENTA != 581 --1380959999
		GROUP BY FT.CD_DW_CUENTA
		
		UNION ALL
		SELECT FT.CD_DW_CUENTA, Sum(FT.VL_HSL*100) MOVIMIENTO, 0 "BALANCE", 0 DEBITO, 0 CREDITO,
	    		Sum(CASE WHEN "CD_DRCRK"='S' THEN "VL_HSL"*100 ELSE 0 END) DEBITO_MOV,
				Sum(CASE WHEN "CD_DRCRK"='H' THEN "VL_HSL"*100 ELSE 0 END) CREDITO_MOV,
				0 MOVIMIENTO_BSEG
		FROM DIM_DOCFI DOC
		INNER JOIN FT_FAGLFLEXA FT 
			ON FT.CD_DW_BELNR = DOC.CD_DW_BKPF
		WHERE DOC.CD_EJERCICIO = :EJERCICIO  
		AND FT.CD_PERIODO = :PERIODO
		AND DOC.CD_BLART != 'CF' 
		AND DOC.BSTAT = ''
		AND FT.CD_DW_CUENTA != 581
		AND (NOT DOC.CD_BLART IN ( SELECT CD_DIMENSION FROM ETL_TRADUCCION WHERE CD_TABLA = 2 ) )
		GROUP BY FT.CD_DW_CUENTA

		UNION ALL
		SELECT FT.CD_DW_CUENTA, Sum(FT.VL_HSL*100) MOVIMIENTO, 0 "BALANCE", 0 DEBITO, 0 CREDITO,
	    		Sum(CASE WHEN "CD_DRCRK"='S' THEN "VL_HSL"*100 ELSE 0 END) DEBITO_MOV, --AND DOC.CD_BLART IN ('I1','WI')
				Sum(CASE WHEN "CD_DRCRK"='H' THEN "VL_HSL"*100 ELSE 0 END) CREDITO_MOV, --AND DOC.CD_BLART IN ('I1','WI')
				0 MOVIMIENTO_BSEG
		FROM DIM_DOCFI DOC
		INNER JOIN FT_FIGLITEM FT 
			ON FT.CD_DW_BELNR = DOC.CD_DW_BKPF
		WHERE DOC.CD_EJERCICIO = :EJERCICIO  
		AND FT.CD_PERIODO = :PERIODO
		AND DOC.CD_BLART IN ( SELECT CD_DIMENSION FROM ETL_TRADUCCION WHERE CD_TABLA = 2 )
		AND NOT DOC.CD_BLART IN ('WL','WA','WE')
		AND DOC.BSTAT = ''
		AND FT.CD_DW_CUENTA = 581 --1380959999
		GROUP BY FT.CD_DW_CUENTA

		UNION ALL 
		SELECT FT.CD_DW_CUENTA, Sum(FT.VL_HSL*100) MOVIMIENTO, 0 "BALANCE", 0 DEBITO, 0 CREDITO,
	    		Sum(CASE WHEN "CD_DRCRK"='S' THEN "VL_HSL"*100 ELSE 0 END * (CASE WHEN DOC.CD_BELNR IN ('5501257768','5501257778') THEN 2 ELSE 1 END)) DEBITO_MOV,
				Sum(CASE WHEN "CD_DRCRK"='H' THEN "VL_HSL"*100 ELSE 0 END) CREDITO_MOV, 
				0 MOVIMIENTO_BSEG
		FROM DIM_DOCFI DOC
		INNER JOIN FT_FAGLFLEXA FT 
			ON FT.CD_DW_BELNR = DOC.CD_DW_BKPF
		WHERE DOC.CD_EJERCICIO = :EJERCICIO  
		AND FT.CD_PERIODO = :PERIODO
		AND DOC.CD_BLART != 'CF' 
		AND DOC.BSTAT = ''
		AND (NOT DOC.CD_BLART IN ( SELECT CD_DIMENSION FROM ETL_TRADUCCION WHERE CD_TABLA = 2 ) OR DOC.CD_BLART IN ('WL','WA','WE'))
		AND FT.CD_DW_CUENTA = 581 --1380959999
		GROUP BY FT.CD_DW_CUENTA
		
		UNION ALL

		SELECT FT.CD_DW_CUENTA, 0 MOVIMIENTO, 0 "BALANCE", 0 DEBITO, 0 CREDITO, 
	    		0 DEBITO_MOV, --AND DOC.CD_BLART IN ('I1','WI')
				0 CREDITO_MOV, --AND DOC.CD_BLART IN ('I1','WI')
				Sum(FT.VL_HSL*100) MOVIMIENTO_BSEG
		FROM DIM_DOCFI DOC
		INNER JOIN FT_FIGLITEM FT 
			ON FT.CD_DW_BELNR = DOC.CD_DW_BKPF
		WHERE DOC.CD_EJERCICIO = :EJERCICIO  
		AND FT.CD_PERIODO = :PERIODO
		AND DOC.BSTAT = ''
		GROUP BY FT.CD_DW_CUENTA
		UNION ALL
		SELECT	FT.CD_DW_CUENTA, 0 MOVIMIENTO, sum(FT.VL_TURNOVER) "BALANCE", 
				sum(FT.VL_DEBITO) DEBITO, sum(FT.VL_CREDITO) CREDITO, 0 DEBITO_MOV, 0 CREDITO_MOV, 0 MOVIMIENTO_BSEG
		FROM FT_FIGL FT
		INNER JOIN DIM_CUENTA CTA 
			ON FT.CD_DW_CUENTA = CTA.CD_DW_CUENTA 
		WHERE FT.FE_FISCPER = :FISCPER
		GROUP BY FT.CD_DW_CUENTA) DET 
		INNER JOIN DIM_CUENTA CTA 
			ON DET.CD_DW_CUENTA = CTA.CD_DW_CUENTA
		WHERE CTA.CD_CUENTA != '3605050000' 
		AND CTA.CD_CUENTA != '3710050000'
		GROUP BY CTA.CD_CUENTA, CTA.NM_CUENTA, CTA.CD_CLASE,CTA.TIPO_INFORME
		HAVING (ABS(Sum(MOVIMIENTO))+ABS(Sum("BALANCE"))+ABS(Sum(DEBITO)))!=0;
	
    ELSEIF :TIPO = 'TOTAL_BSEG' THEN
		SELECT :PERIODO "PERIODO", 
				CTA.CD_CUENTA CUENTA,
				CTA.NM_CUENTA CUENTA_T,
				CTA.CD_CLASE CLASE,
				(CASE WHEN CTA.TIPO_INFORME = 'B' THEN 'BALANCE' ELSE 'PYG'  END) TIPO_INFORME,
				Sum("BALANCE") "BALANCE", 
				Sum(MOVIMIENTO) MOVIMIENTO,  
				Sum(MOVIMIENTO)-Sum("BALANCE") DIFERENCIA,
				Sum(DEBITO) DEBITO,
				Sum(DEBITO_MOV) DEBITO_MOV,
				Sum(CREDITO) CREDITO,
				Sum(CREDITO_MOV) CREDITO_MOV,
				Sum(DEBITO)-Sum(DEBITO_MOV) DIFERENCIA_DEBITO,
				Sum(CREDITO)+Sum(CREDITO_MOV) DIFERENCIA_CREDITO,
				(CASE WHEN (Sum(MOVIMIENTO)-Sum("BALANCE")) !=0 THEN 'SI' ELSE 'NO'
				END) HAY_DIFERENCIA
		FROM (
		SELECT FT.CD_DW_CUENTA, Sum(FT.VL_HSL*100) MOVIMIENTO, 0 "BALANCE", 0 DEBITO, 0 CREDITO,
	    		Sum(CASE WHEN "CD_DRCRK"='S' THEN "VL_HSL"*100 ELSE 0 END) DEBITO_MOV, --AND DOC.CD_BLART IN ('I1','WI')
				Sum(CASE WHEN "CD_DRCRK"='H' THEN "VL_HSL"*100 ELSE 0 END) CREDITO_MOV --AND DOC.CD_BLART IN ('I1','WI')
		FROM DIM_DOCFI DOC
		INNER JOIN FT_FIGLITEM FT 
			ON FT.CD_DW_BELNR = DOC.CD_DW_BKPF
		WHERE DOC.CD_EJERCICIO = :EJERCICIO  
		AND FT.CD_PERIODO = :PERIODO
		AND DOC.BSTAT = ''
		GROUP BY FT.CD_DW_CUENTA
		UNION ALL
		SELECT	FT.CD_DW_CUENTA, 0 MOVIMIENTO, sum(FT.VL_TURNOVER) "BALANCE", 
				sum(FT.VL_DEBITO) DEBITO, sum(FT.VL_CREDITO) CREDITO, 0 DEBITO_MOV, 0 CREDITO_MOV
		FROM FT_FIGL FT
		INNER JOIN DIM_CUENTA CTA 
			ON FT.CD_DW_CUENTA = CTA.CD_DW_CUENTA 
		WHERE FT.FE_FISCPER = :FISCPER
		GROUP BY FT.CD_DW_CUENTA) DET 
		INNER JOIN DIM_CUENTA CTA 
			ON DET.CD_DW_CUENTA = CTA.CD_DW_CUENTA
		WHERE CTA.CD_CUENTA != '3605050000' 
		AND CTA.CD_CUENTA != '3710050000'
		GROUP BY CTA.CD_CUENTA, CTA.NM_CUENTA, CTA.CD_CLASE,CTA.TIPO_INFORME
		HAVING (ABS(Sum(MOVIMIENTO))+ABS(Sum("BALANCE"))+ABS(Sum(DEBITO)))!=0;
	ELSE 
		SELECT 	F."CD_PERIODO" PERIODO, 
			C.CD_CLASE CLASE_CUENTA,
			D.CD_BLART CLASE_DOC,
			D."CD_BELNR" DOC_FI,
			F.CD_DW_BUZEI POSICION,
			D.FL_ANULADO ANULADO,
			D.STBLG ANULADO_CON,
			CB.CD_DIVISION DIVISION,
			D.BKTXT TEXTO_CABECERA,
			D.BKTXT TEXTO_POSICION,
			D.FE_BUDAT FECHA_CONTAB,
			D.FE_BLDAT FECHA_DOC,
			D.XREVERSAL REVERSADO,
			CC."CD_CECO" CECO,
			CB.CD_CEBE CEBE,
			C."CD_CUENTA" CUENTA,
		    F."XREF1" NIT_TERCERO,
		    F."XREF3" NOMBRE_TERCERO,
		    (CASE WHEN "CD_DRCRK"='S' THEN "VL_HSL"*100 ELSE 0 END) DEBITO,
			(CASE WHEN "CD_DRCRK"='H' THEN "VL_HSL"*100 ELSE 0 END) CREDITO,
			D.USNAM  USUARIO,
			D.FE_CPUDT FECHA_AUDIT,
			D.FE_CPUTM HORA_AUDIT	
		FROM "FT_FIGLITEM" F
		INNER JOIN DIM_CUENTA C ON C.CD_DW_CUENTA = F.CD_DW_CUENTA
		INNER JOIN DIM_DOCFI D ON F.CD_DW_BELNR = D.CD_DW_BKPF 
		LEFT JOIN DIM_CECO CC ON CC.CD_DW_CECO = F.CD_DW_CECO
		LEFT JOIN DIM_CEBE_PRCTR CB ON CB.CD_DW_CEBE = F.CD_DW_CEBE
		WHERE D.CD_BLART != 'CF' AND D.BSTAT = '' 
		AND F."CD_PERIODO"  = :PERIODO
		AND C.CD_CUENTA = :CUENTA;
	END IF;
	
END