PROCEDURE "SP_PTD_DIM_DOCMM"(pDia VARCHAR(8))
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   AS
BEGIN
   /*************************************
       Actualiza el encabezado de documento MM Para todas las empresas. 
       El proceso de carga de la MSEG elimina los encabezados que no son de KOBA.
       DIM_DOCMM es actualizada por el cargue de la MSEG y por el cargue del 2LIS_03_BF
   *************************************/
   
	--DECLARE FECHA_INICIO DATE = ADD_MONTHS(CURRENT_DATE,-1);
	DECLARE FECHA_INICIO DATE = ADD_DAYS(CURRENT_DATE, -15);
	DECLARE FECHA_FIN DATE = CURRENT_DATE;
	DECLARE FECHA_INICIO_V1 NVARCHAR(8);
	DECLARE FECHA_FIN_V1 NVARCHAR(8);
	Declare V_SQL NVARCHAR(2000);
	DECLARE pEJERCICIO1 NVARCHAR(4);
	DECLARE pEJERCICIO2 NVARCHAR(4);
	DECLARE pEjercicio NVARCHAR(200);
	
	IF pDia= '' THEN 
		FECHA_INICIO_V1 = TO_NVARCHAR(TO_DATE(:FECHA_INICIO), 'YYYYMMDD');
		FECHA_FIN_V1 = TO_NVARCHAR(TO_DATE(:FECHA_FIN), 'YYYYMMDD');
		pEJERCICIO1 = Substring(:FECHA_INICIO,1,4);
		pEJERCICIO2 = Substring(:FECHA_FIN,1,4);
		IF pEJERCICIO1 = pEJERCICIO2 THEN 
			pEjercicio = ' MJAHR='''||:pEJERCICIO1||'''';
		ELSE
			pEjercicio = '(MJAHR='''||:pEJERCICIO1||'''  OR MJAHR='''||:pEJERCICIO2||''') ';
		END IF;
	ELSE 
		FECHA_INICIO_V1 = :pDia;
		FECHA_FIN_V1 = :pDia;
		pEJERCICIO1 = Substring(:pDia,1,4);
		pEJERCICIO2 = Substring(:pDia,1,4);
		pEjercicio = ' MJAHR='''||:pEJERCICIO1||'''';
	END IF;
	
	TRUNCATE TABLE STG_ABAP_MKPF;
	
	V_SQL = 'INSERT INTO KOBA_HDI_DB_1.STG_ABAP_MKPF(MANDT,MBLNR,MJAHR,VGART,BLART,BLDAT,BUDAT,CPUDT,CPUTM,AEDAT,BKTXT,XBLNR,USNAM,BLAUM,BLA2D,TCODE2) '||
			'SELECT ''S'',MBLNR,MJAHR,VGART,BLART,BLDAT,BUDAT,CPUDT,CPUTM,AEDAT,BKTXT,XBLNR,USNAM,BLAUM,BLA2D,TCODE2 '||
			'FROM KOBA_HDI_DB_1.VT_ABAP_MKPF ' ||
			'WHERE '||pEjercicio||' AND BUDAT>=' ||:FECHA_INICIO_V1 || ' AND BUDAT<=' ||:FECHA_FIN_V1;
	EXECUTE IMMEDIATE V_SQL;
	COMMIT;

	DocMM = select	M."MBLNR" CD_MBLNR,M."MJAHR" CD_EJERCICIO,M."VGART" CD_VGART,M."BLART" CD_BLART,M."BLDAT" FE_BLDAT,M."BUDAT" FE_BUDAT,
					M."AEDAT" FE_AEDAT,M."USNAM",M."XBLNR",M."BKTXT",M."TCODE2" CD_TCODE2,M.BLAUM CD_BLAUM, M."BLA2D" CD_BLA2D,TO_TIMESTAMP(M."CPUDT" || M."CPUTM") CPUDTTM
			from "STG_ABAP_MKPF" M;
	
	MERGE INTO "DIM_DOCMM" D
	USING :DocMM M 
		ON M.CD_MBLNR = D.CD_MBLNR 
		AND M.CD_EJERCICIO = D.CD_EJERCICIO
	WHEN MATCHED THEN UPDATE SET 
		CD_VGART = M."CD_VGART", 
		CD_BLART = M."CD_BLART",
		FE_AEDAT = M."FE_AEDAT",
		USNAM	 = M."USNAM",
		XBLNR	 = M."XBLNR",
		BKTXT	 = M."BKTXT",
		CD_TCODE2= M."CD_TCODE2", 
		CD_BLA2D = M."CD_BLA2D", 
		CD_BLAUM = M.CD_BLAUM,
		CPUDTTM  = M.CPUDTTM
	WHEN NOT MATCHED THEN 
	INSERT ("CD_MBLNR","CD_EJERCICIO","CD_VGART","CD_BLART","FE_BLDAT","FE_BUDAT","FE_AEDAT","USNAM","XBLNR","BKTXT","CPUDTTM","CD_TCODE2","CD_DW_EMPRESA", "CD_BLAUM","CD_BLA2D")
	VALUES (M."CD_MBLNR",M."CD_EJERCICIO",M."CD_VGART",M."CD_BLART",M."FE_BLDAT",M."FE_BUDAT",M."FE_AEDAT",M."USNAM",M."XBLNR",M."BKTXT",M."CPUDTTM",M."CD_TCODE2",-1,M."CD_BLAUM",M."CD_BLA2D");
	COMMIT;

END