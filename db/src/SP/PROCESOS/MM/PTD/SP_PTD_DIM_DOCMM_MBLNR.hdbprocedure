PROCEDURE "SP_PTD_DIM_DOCMM_MBLNR"(pDesde VARCHAR(10), pHasta VARCHAR(10))
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   AS
BEGIN
   /*************************************
       Actualiza el encabezado de documento MM Para todas las empresas. 
       El proceso de carga de la MSEG elimina los encabezados que no son de KOBA.
       DIM_DOCMM es actualizada por el cargue de la MSEG y por el cargue del 2LIS_03_BF
   *************************************/
	Declare V_SQL NVARCHAR(2000);
	Declare N int=1;
	Declare pEJERCICIO SMALLINT;
	Declare pPeriodo INT;
	DECLARE pParticion INT;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
       SELECT ::SQL_ERROR_CODE, ::SQL_ERROR_MESSAGE FROM TDUMMY;
    
	TRUNCATE TABLE STG_ABAP_MKPF;
	
	V_SQL = 'INSERT INTO KOBA_HDI_DB_1.STG_ABAP_MKPF(MANDT,MBLNR,MJAHR,VGART,BLART,BLDAT,BUDAT,CPUDT,CPUTM,AEDAT,BKTXT,XBLNR,USNAM,BLAUM,BLA2D,TCODE2) '||
			'SELECT ''S'',MBLNR,MJAHR,VGART,BLART,BLDAT,BUDAT,CPUDT,CPUTM,AEDAT,BKTXT,XBLNR,USNAM,BLAUM,BLA2D,TCODE2 '||
			'FROM KOBA_HDI_DB_1.VT_ABAP_MKPF ' ||
			'WHERE MBLNR>=''' ||:pDesde || ''' AND MBLNR<=''' ||:pHasta ||''' AND MJAHR=2018';
	EXECUTE IMMEDIATE V_SQL;
	COMMIT;
	--AND YEAR(CPUDT)=2021 AND MONTH(CPUDT)=7
	
	DocMM = select	M."MBLNR" CD_MBLNR,M."MJAHR" CD_EJERCICIO,M."VGART" CD_VGART,M."BLART" CD_BLART,M."BLDAT" FE_BLDAT,M."BUDAT" FE_BUDAT,
					M."AEDAT" FE_AEDAT,M."USNAM",M."XBLNR",M."BKTXT",M."TCODE2" CD_TCODE2,M.BLAUM CD_BLAUM, M."BLA2D" CD_BLA2D,TO_TIMESTAMP(M."CPUDT" || M."CPUTM") CPUDTTM
			from STG_ABAP_MKPF M;
	
	SELECT DISTINCT CD_EJERCICIO INTO pEJERCICIO FROM :DocMM;

	MERGE INTO "DIM_DOCMM" D
	USING :DocMM M 
		ON M.CD_MBLNR = D.CD_MBLNR 
		AND M.CD_EJERCICIO = D.CD_EJERCICIO
	WHEN MATCHED THEN UPDATE SET 
		CD_VGART = M."CD_VGART", 
		CD_BLART = M."CD_BLART",
		FE_AEDAT = M."FE_AEDAT",
		USNAM	 = M."USNAM",
		XBLNR	 = M."XBLNR",
		BKTXT	 = M."BKTXT",
		CD_TCODE2= M."CD_TCODE2", 
		CD_BLA2D = M."CD_BLA2D", 
		CD_BLAUM = M.CD_BLAUM,
		CPUDTTM  = M.CPUDTTM
	WHEN NOT MATCHED THEN 
	INSERT ("CD_MBLNR","CD_EJERCICIO","CD_VGART","CD_BLART","FE_BLDAT","FE_BUDAT","FE_AEDAT","USNAM","XBLNR","BKTXT","CPUDTTM","CD_TCODE2","CD_DW_EMPRESA", "CD_BLAUM","CD_BLA2D")
	VALUES (M."CD_MBLNR",M."CD_EJERCICIO",M."CD_VGART",M."CD_BLART",M."FE_BLDAT",M."FE_BUDAT",M."FE_AEDAT",M."USNAM",M."XBLNR",M."BKTXT",M."CPUDTTM",M."CD_TCODE2",-1,M."CD_BLAUM",M."CD_BLA2D");
	COMMIT;
	
	/*
	TRUNCATE TABLE STG_ABAP_MSEG;
	
	CALL SP_STG_MSEG_LOAD_V001(:pEJERCICIO,:pDesde,:pHasta,'F');

	--Partición de la FT_MSEG	
	SELECT PERIODO, PART_ID INTO pPeriodo, pParticion
	FROM (	SELECT Distinct ETl.PERIODO,ETL.PART_ID 
			FROM STG_ABAP_MSEG 
			INNER JOIN ETL_PARTICIONES ETL 
					ON ETL.PERIODO = SUBSTRING(BUDAT_MKPF,1,6)
					AND ETL.TABLA = 'FT_MSEG'
			GROUP BY ETl.PERIODO,ETL.PART_ID) DET;

	CALL SP_FT_MSEG_LOAD_V001('F', :pPeriodo, :pParticion);

	--Partición de la FT_COMPRA_INVENTARIO
	
	SELECT PERIODO, PART_ID INTO pPeriodo, pParticion
	FROM (	SELECT Distinct ETl.PERIODO,ETL.PART_ID 
			FROM STG_ABAP_MSEG STG	
			INNER JOIN DIM_COMPRA COMPRA ON COMPRA.CD_EBELN = STG.EBELN 
			INNER JOIN ETL_PARTICIONES ETL 
					ON ETL.PERIODO = TO_VARCHAR(COMPRA.FE_AEDAT,'YYYYMM')
					AND ETL.TABLA = 'FT_COMPRA_INVENTARIO'
			GROUP BY ETl.PERIODO,ETL.PART_ID) DET;
	
	CALL SP_FT_COMPRA_INVENTARIO_LOAD_FULL(:pPeriodo, :pParticion);
	COMMIT;
	*/
	
END