PROCEDURE "SP_FT_COMPRA_LOAD_2LIS_02_ITM"(pPeriodo INT, pPart_ID SMALLINT)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   AS
BEGIN
   /*************************************
	Carga de compras de fuente 2LIS_02_ITM y 2LIS_02_SCL
	Fecha de Creación: 30/03/2020
	Fecha de Modificación: 02/04/2020
	Creado por: CORG-MREDONDO
	Modifica:
	Motivo cambio:	Manejo de Deltas
					NU_UMREZ: Se agrega el multiplicador en unidad de medida de pedido usado en los reportes de compra
	
	Stage table: STG_2LIS_02_ITM, STG_2LIS_02_SCL
	Hecho destino: FT_COMPRA
	
   *************************************/
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
       SELECT ::SQL_ERROR_CODE, ::SQL_ERROR_MESSAGE FROM TDUMMY;

	Delta_Compra =  SELECT  ROW_NUMBER() OVER (PARTITION BY ITM.EBELN, ITM.EBELP ORDER BY ITM.SYDAT Desc, ITM.UZEIT DESC ) ULTIMO_REGISTRO,
							ITM.SYDAT, ITM.UZEIT, ITM.EBELN, ITM.EBELP, 
							CAST(Substring(ITM.BEDAT,1,4) AS SMALLINT) EJERCICIO, 
							CAST(Substring(ITM.BEDAT,1,6) AS INT) PERIODO, 
							MAT.CD_DW_MATERIAL,
							COALESCE(CECO.CD_DW_CECO,0) CD_DW_CECO,
							ITM.WERKS,ITM.LGORT,ITM.MENGE,ITM.MEINS,ITM.NETPR,ITM.PEINH,ITM.NETWR, ITM.STATU,ITM.ELIKZ,ITM.ROCANCEL,ITM.BEDAT, ITM.AKTWE, ITM.LFZTA, ITM.TABW, ITM.UMREZ  
					FROM STG_2LIS_02_ITM  ITM
					INNER JOIN DIM_MATERIAL MAT 
						ON MAT.CD_MATERIAL = ITM.MATNR
					LEFT JOIN DIM_CECO CECO  
						ON CECO.CD_CECO = ITM.ZZKOSTL AND NOT ZZKOSTL=''
					WHERE CAST(Substring(ITM.BEDAT,1,6) AS INT) = :pPeriodo;
						
	MERGE INTO FT_COMPRA PARTITION  (:pPart_ID) FT
	USING :Delta_Compra ITM 
		ON FT.CD_EBELN = ITM.EBELN 
		AND FT.CD_ITEM = ITM.EBELP
		AND FT.CD_PERIODO = ITM.PERIODO
	WHEN MATCHED AND ITM.ULTIMO_REGISTRO = 1 THEN UPDATE 
		SET CD_DW_CECO		=ITM.CD_DW_CECO, 
			CD_CENTRO		=ITM.WERKS, 
			CD_LGORT		=ITM.LGORT, 
			NU_MENGE		=ITM.MENGE, 
			CD_MEINS		=ITM.MEINS, 
		   	VL_NETPR		=ITM.NETPR, 
		   	VL_PEINH		=ITM.PEINH, 
		   	VL_NETWR		=ITM.NETWR, 
		   	FL_LOEKZ		=ITM.ROCANCEL, 
		   	FL_STATUS		=ITM.STATU, 
		   	FL_ELIKZ		=ITM.ELIKZ,  
		   	FE_BEDAT		=ITM.BEDAT,  
		   	NU_AKTWE		=ITM.AKTWE, 
		   	NU_LFZTA		=ITM.LFZTA,
		   	NU_TABW			=ITM.TABW,
		   	NU_UMREZ		=ITM.UMREZ
	WHEN NOT MATCHED AND ITM.ULTIMO_REGISTRO = 1 THEN INSERT  
		  (CD_EBELN, CD_ITEM, CD_EJERCICIO, CD_PERIODO, CD_DW_MATERIAL, CD_DW_EMPRESA, CD_DW_CECO, CD_CENTRO, CD_LGORT, NU_MENGE, CD_MEINS,NU_UMREZ, 
		   VL_NETPR, VL_PEINH, VL_NETWR, FL_LOEKZ, FL_STATUS, FL_ELIKZ,  FE_BEDAT,  NU_AKTWE, NU_LFZTA,NU_TABW)
	VALUES(ITM.EBELN, ITM.EBELP, ITM.EJERCICIO,ITM.PERIODO, ITM.CD_DW_MATERIAL, 28, ITM.CD_DW_CECO, ITM.WERKS,ITM.LGORT,ITM.MENGE,ITM.MEINS, ITM.UMREZ,
		   ITM.NETPR,ITM.PEINH,ITM.NETWR,ITM.ROCANCEL,ITM.STATU,ITM.ELIKZ,ITM.BEDAT, ITM.AKTWE, ITM.LFZTA, ITM.TABW);
	COMMIT;

	--Para llevar un control de posiciones cargadas, se establece la cantidad de posiciones en los documentos MM
	MERGE INTO DIM_COMPRA D 
	USING ( SELECT EBELN, Count(EBELP) Cant
			FROM :Delta_Compra 
			GROUP BY EBELN) DET 
	ON DET.EBELN = D.CD_EBELN
	WHEN MATCHED THEN UPDATE SET NU_ITEMS = Cant; 

	--Se borran los datos cargados en la FACT TABLE de la tabla temporal de Stage
	DELETE FROM STG_2LIS_02_ITM WHERE EBELN IN (SELECT Distinct EBELN FROM :Delta_Compra);
	COMMIT;

	INSERT INTO ETL_CONTROL_CARGUE(TABLA,TIPO_CARGA,FECHA_CARGA,BUKRS,GJAHR,BLART,BELNR_DESDE,BELNR_HASTA,ULTIMA_FECHA,REGISTROS_PROCESADOS)
	select 'FT_COMPRA_2LIS_02_ITM','D',add_seconds(now(),-18000),'6A00',Max(EJERCICIO),'',Min(EBELN),Max(EBELN),Max(F.BEDAT),Count(EBELN)
	from :Delta_Compra F ;

	COMMIT;
	
END