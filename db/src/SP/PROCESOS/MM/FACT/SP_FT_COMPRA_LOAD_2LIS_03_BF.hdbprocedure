PROCEDURE "SP_FT_COMPRA_LOAD_2LIS_03_BF"(pPeriodo INT, pPart_ID SMALLINT)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   AS
BEGIN
   /*************************************
	Carga de inventario de fuente 2LIS_03_BF
	Fecha de Creación: 30/03/2020
	Fecha de Modificación: 02/04/2020
	Creado por: CORG-MREDONDO
	Modifica:
	Motivo cambio:	Manejo de Deltas

	El movimiento de inventario de la compra se almacena en la misma partición de la fecha o periodo de creación de la compra,
	con el fin de poder hacer la actualización de los campos de entrega total en la Compra.
	
	Stage table: STG_2LIS_03_BF
	Hecho destino: FT_COMPRA_INVENTARIO, FT_MSEG
	
   *************************************/

   	--Años que cambiaron
	DECLARE CURSOR DocMM_Ejercicio FOR
	SELECT ETl.PERIODO EJERCICIO,ETL.PART_ID
	FROM STG_2LIS_03_BF STG
	INNER JOIN DIM_COMPRA DIM ON DIM.CD_EBELN = STG.EBELN
	INNER JOIN ETL_PARTICIONES ETL 
			ON ETL.PERIODO = DIM.CD_EJERCICIO 
			AND ETL.TABLA = 'DIM_COMPRA'
	GROUP BY ETl.PERIODO,ETL.PART_ID;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
       SELECT ::SQL_ERROR_CODE, ::SQL_ERROR_MESSAGE FROM TDUMMY;

	Delta_Mov = 	SELECT  DIM.CD_DW_MKPF, DIM.ITEMS_COMPRA, STG.EBELN,STG.EBELP, CAST(STG.ZEILE AS SMALLINT) CD_ZEILE,
							CAST(TO_VARCHAR(COMPRA.FE_AEDAT,'YYYYMM') AS INT) PERIODO,
							28 EMPRESA, MAT.CD_DW_MATERIAL, COALESCE (CB.CD_DW_CEBE,0) CD_DW_CEBE, COALESCE (CC.CD_DW_CECO,0) CD_DW_CECO, COALESCE (P.CD_DW_CUENTA,0) CD_DW_CUENTA, COALESCE (B2.CD_DW_BP,0) CD_DW_KUNNR, COALESCE (B1.CD_DW_BP,0) CD_DW_LIFNR,
							STG.WERKS CD_CENTRO, STG.BWART,STG.LGORT,STG.WAERS, STG.MEINS,STG.ERFME,STG.SHKZG, STG.BUDAT, STG.MENGE,STG.ERFMG,STG.DMBTR,STG.BNBTR, 
							cAST(TO_VARCHAR(COMPRA.FE_AEDAT,'YYYY') AS SMALLINT) EJERCICIO, STG.MBLNR , COMPRA.FE_AEDAT
					FROM STG_2LIS_03_BF STG 
					INNER JOIN DIM_DOCMM DIM 			ON DIM.CD_MBLNR = STG.MBLNR 
					INNER JOIN DIM_MATERIAL MAT 		on MAT.CD_MATERIAL = STG.MATNR 
					INNER JOIN DIM_COMPRA COMPRA		ON COMPRA.CD_EBELN = STG.EBELN
					LEFT JOIN DIM_CEBE_PRCTR CB 		on CB.CD_CEBE = STG.PRCTR
					LEFT JOIN DIM_CECO CC 				on CC.CD_CECO = STG.KOSTL
					LEFT JOIN DIM_CUENTA P 				on P.CD_CUENTA = STG.SAKTO
					LEFT JOIN DIM_BPARTNER B1 			on B1.CD_BP = STG.LIFNR AND B1.CD_CLASE='P'
					LEFT JOIN DIM_BPARTNER B2 			on B2.CD_BP = STG.KUNNR AND B2.CD_CLASE='C'
					WHERE BSTAUS='A';

	MERGE INTO FT_COMPRA_INVENTARIO PARTITION (:pPart_ID) FT 
	USING :Delta_Mov MOV
		ON  MOV.CD_DW_MKPF	= FT.CD_DW_MKPF
		AND MOV.CD_ZEILE    = FT.CD_ZEILE
		AND MOV.PERIODO 	= FT.CD_PERIODO 
	WHEN NOT MATCHED AND Mov.PERIODO = :pPeriodo THEN 	--Solo movimiento de inventario relacionado con la compra que no ha sido previamente ingresado; 
			INSERT (CD_DW_MKPF, CD_ZEILE, CD_PERIODO, CD_DW_EMPRESA, CD_DW_MATERIAL, CD_DW_CEBE, CD_DW_CECO, CD_DW_CUENTA, CD_DW_LIFNR, CD_LFBNR,
					CD_CENTRO, CD_BWART, CD_LGORT, CD_WAERS,CD_MEINS,CD_ERFME,  CD_EBELN, CD_EBELP, FL_SHKZG, FE_FECHA,  NU_MENGE, NU_ERFMG,  VL_DMBTR, VL_BNBTR)
			VALUES(MOV.CD_DW_MKPF, MOV.CD_ZEILE, MOV.PERIODO, MOV.EMPRESA, MOV.CD_DW_MATERIAL, MOV.CD_DW_CEBE, MOV.CD_DW_CECO, MOV.CD_DW_CUENTA, MOV.CD_DW_LIFNR,'',
					MOV.CD_CENTRO, MOV.BWART,MOV.LGORT,MOV.WAERS, MOV.MEINS,MOV.ERFME,MOV.EBELN,MOV.EBELP,MOV.SHKZG, MOV.BUDAT, MOV.MENGE,MOV.ERFMG,MOV.DMBTR,MOV.BNBTR);
	COMMIT;
	--Para llevar un control de posiciones cargadas, se establece la cantidad de posiciones en los documentos MM
	--Solo tiene un solo año

	MERGE INTO DIM_DOCMM DIM 
	USING (	SELECT MBLNR, EMPRESA, Count(MBLNR) Cant, EJERCICIO 
			FROM :Delta_Mov Mov
			WHERE Mov.PERIODO = :pPeriodo 
			AND ITEMS_COMPRA<1
			GROUP BY MBLNR, EMPRESA, EJERCICIO) DET 
	ON  DIM.CD_MBLNR 	 = DET.MBLNR 
	AND DIM.CD_EJERCICIO = DET.EJERCICIO
	WHEN MATCHED THEN UPDATE 
	SET ITEMS_COMPRA = Cant;
	COMMIT;

	Recibido =	SELECT 	FT.CD_EBELN, 
						FT.CD_EBELP,
						STG.EJERCICIO,
						SUM(CASE WHEN FT."FL_SHKZG"='H' THEN FT."NU_MENGE"*-1 ELSE FT."NU_MENGE" END) CANT_RECIBIDA,
						Max(FT.FE_FECHA) FECHA_CONTABILIZACION_DOC 
				FROM FT_COMPRA_INVENTARIO FT
				INNER JOIN :Delta_Mov STG 
					ON STG.EBELN = FT.CD_EBELN 
					AND STG.EBELP = FT.CD_EBELP
					AND STG.PERIODO = FT.CD_PERIODO
				WHERE FT.CD_PERIODO =  :pPeriodo
				GROUP BY STG.EJERCICIO, FT.CD_PERIODO,FT.CD_EBELN, FT.CD_EBELP;
			
	MERGE INTO FT_COMPRA PARTITION(:pPart_ID) COMPRA
	USING :Recibido DET 
		ON DET.CD_EBELN  = COMPRA.CD_EBELN  
		AND DET.CD_EBELP = COMPRA.CD_ITEM
	WHEN MATCHED THEN UPDATE 
		SET NU_RECIBIDO 	  = CANT_RECIBIDA,
			FE_ULTIMA_ENTREGA = FECHA_CONTABILIZACION_DOC;
	COMMIT;
	
	--Se borran los datos cargados en la FACT TABLE de la tabla temporal de Stage
	DELETE FROM STG_2LIS_03_BF WHERE MBLNR IN (SELECT Distinct MBLNR FROM :Delta_Mov WHERE PERIODO = :pPeriodo);
	COMMIT;

	INSERT INTO ETL_CONTROL_CARGUE(TABLA,TIPO_CARGA,FECHA_CARGA,BUKRS,GJAHR,BLART,BELNR_DESDE,BELNR_HASTA,ULTIMA_FECHA,REGISTROS_PROCESADOS)
	select 'FT_COMPRA_2LIS_03_BF','D',add_seconds(now(),-18000),'6A00',Max(EJERCICIO),'',Min(EBELN),Max(EBELN),Max(F.FE_AEDAT),Count(EBELN)
	from :Delta_Mov F 
	WHERE ITEMS_COMPRA<1 AND PERIODO=:pPeriodo;


/*
	--El movimiento de inventario de la compra se almacena en la misma partición de la fecha o periodo de creación de la compra,
	--con el fin de poder hacer la actualización de los campos de entrega total en la Compra.
	INVE= 	SELECT  MS.CD_DW_MKPF,MS.CD_ITEM CD_ZEILE,
					TO_VARCHAR(COM.FE_AEDAT, 'YYYYMM') CD_PERIODO,  
					MS.CD_DW_EMPRESA,MS.CD_DW_MATERIAL,MS.CD_DW_CEBE,
					MS.CD_DW_CECO,MS.CD_DW_CUENTA,MS.CD_DW_EMLIF,MS.CD_DW_LIFNR,MS.CD_CENTRO,MS.CD_BWART,MS.CD_LGORT,MS.CD_WAERS,
					MS.CD_MEINS,MS.CD_ERFME,MS.CD_BPRME,MS.CD_EBELN,MS.CD_EBELP,
					MS.CD_LFPOS,MS.CD_SMBLP,MS.CD_URZEI,MS.CD_LFBNR,MS.CD_LFBJA,MS.FL_SHKZG,MS.FL_ELIKZ,MS.FL_VPRSV,MS.FE_FECHA,MS.SGTXT,
					MS.NU_MENGE,MS.NU_ERFMG,MS.NU_BPMNG,MS.VL_DMBTR,MS.VL_BNBTR,MS.VL_BUALT,MS.VL_LBKUM,MS.VL_SALK3
					FROM FT_MSEG MS
					INNER JOIN DIM_COMPRA COM
						ON COM.CD_EBELN = MS.CD_EBELN
					INNER JOIN DIM_DOCMM MM 
						ON MM.CD_DW_MKPF = MS.CD_DW_MKPF 	
					WHERE MS.FE_FECHA BETWEEN  :FECHA_INICIO AND :FECHA_FIN 
					AND MS.CD_PERIODO>=202101 --Desde el periodo de migración
					AND MM.ITEMS_COMPRA<1; --Solo movimiento de inventario relacionado con la compra que no ha sido previamente ingresado
					
	INSERT INTO FT_COMPRA_INVENTARIO(CD_DW_MKPF,CD_ZEILE,CD_PERIODO,CD_DW_EMPRESA,CD_DW_MATERIAL,CD_DW_CEBE,
			CD_DW_CECO,CD_DW_CUENTA,CD_DW_EMLIF,CD_DW_LIFNR,CD_CENTRO,CD_BWART,CD_LGORT,CD_WAERS,CD_MEINS,CD_ERFME,CD_BPRME,CD_EBELN
			,CD_EBELP,CD_LFPOS,CD_SMBLP,CD_URZEI,CD_LFBNR,CD_LFBJA,FL_SHKZG,FL_ELIKZ,FL_VPRSV,FE_FECHA,SGTXT,NU_MENGE,
			NU_ERFMG,NU_BPMNG,VL_DMBTR,VL_BNBTR,VL_BUALT,VL_LBKUM,VL_SALK3)
    SELECT CD_DW_MKPF,CD_ZEILE,CD_PERIODO,CD_DW_EMPRESA,CD_DW_MATERIAL,CD_DW_CEBE,
			CD_DW_CECO,CD_DW_CUENTA,CD_DW_EMLIF,CD_DW_LIFNR,CD_CENTRO,CD_BWART,CD_LGORT,CD_WAERS,CD_MEINS,CD_ERFME,CD_BPRME,CD_EBELN
			,CD_EBELP,CD_LFPOS,CD_SMBLP,CD_URZEI,CD_LFBNR,CD_LFBJA,FL_SHKZG,FL_ELIKZ,FL_VPRSV,FE_FECHA,SGTXT,NU_MENGE,
			NU_ERFMG,NU_BPMNG,VL_DMBTR,VL_BNBTR,VL_BUALT,VL_LBKUM,VL_SALK3 
	FROM :INVE;

	--Se actualiza la cantidad de items ingresados en el historial de compra para el movimiento de inventario
	--Con el fin de no volver a insertar y mantener un control de posiciones insertadas por documento de MM
	MERGE INTO DIM_DOCMM MM
	USING ( SELECT CD_DW_MKPF, Count(CD_ZEILE) Cant
			FROM :INVE
			GROUP BY CD_DW_MKPF) DET 
		ON DET.CD_DW_MKPF = MM.CD_DW_MKPF 
	WHEN MATCHED THEN UPDATE SET ITEMS_COMPRA  = DET.Cant;

	insert into ETL_CONTROL_CARGUE(TABLA,TIPO_CARGA,FECHA_CARGA,BUKRS,GJAHR,BLART,BELNR_DESDE,BELNR_HASTA,ULTIMA_FECHA,REGISTROS_PROCESADOS)
	select 'FT_COMPRA_INVENTARIO','D',add_seconds(now(),-18000),'6A00',Max(SUBSTRING(FE_FECHA,0,4)),'',Min(CD_DW_MKPF),Max(CD_DW_MKPF),Max(:FECHA_FIN),Count(*)
	from :INVE F;

	COMMIT;
*/
	
	
END