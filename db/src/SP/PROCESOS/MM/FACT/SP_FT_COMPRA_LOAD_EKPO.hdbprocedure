PROCEDURE "SP_FT_COMPRA_LOAD_EKPO"(pTipoCarga VARCHAR(1),pPeriodo INT, pPart_ID SMALLINT)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   AS
BEGIN
   /*************************************
	Carga de compras
	Fecha de Creación: 30/03/2020
	Fecha de Modificación: 02/04/2020
	Creado por: CORG-MREDONDO
	Modifica:
	Motivo cambio: Manejo de Deltas
	
	Stage table: STG_ABAP_EKPO
	Hecho destino: FT_EKPO
	
	pEBELN_DESDE NVARCHAR(10),pEBELN_HASTA NVARCHAR(10),pFECHA_INICIO NVARCHAR(8),pFECHA_FIN NVARCHAR(8)
   *************************************/
	DECLARE P_BP INT;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
       SELECT ::SQL_ERROR_CODE, ::SQL_ERROR_MESSAGE FROM TDUMMY;
    
	--Se actualiza las compras de la tabla ABAP
	Compras = SELECT	STG.EBELN,
						STG.EBELP,
						cast(TO_VARCHAR(DIM.FE_AEDAT,'YYYYMM') as int) CD_PERIODO,
						cast(TO_VARCHAR(DIM.FE_AEDAT,'YYYY') as smallint) CD_EJERCICIO,
						STG.LOEKZ,STG.MATNR,MAT.CD_DW_MATERIAL,STG.BUKRS,STG.WERKS,STG.LGORT,STG.MENGE,STG.MEINS,STG.BPRME,
						STG.NETPR,STG.PEINH,STG.NETWR,STG.ELIKZ,STG.ABDAT,STG.ABFTZ,STG.LMEIN,STG.STATUS,STG.AEDAT,STG.BRTWR,STG.UMREZ,
						:pTipoCarga FL_FUENTE
				FROM STG_ABAP_EKPO STG
				INNER JOIN DIM_COMPRA DIM 
					ON STG.EBELN = DIM.CD_EBELN
				INNER JOIN DIM_MATERIAL MAT 
					ON MAT.CD_MATERIAL = STG.MATNR
				WHERE TO_VARCHAR(DIM.FE_AEDAT,'YYYYMM') = :pPeriodo;

	MERGE INTO FT_COMPRA PARTITION (:pPart_ID) FT 
	USING :Compras ITM 
		ON FT.CD_EBELN = ITM.EBELN 
		AND FT.CD_ITEM = ITM.EBELP
		AND FT.CD_PERIODO = ITM.CD_PERIODO
	WHEN MATCHED THEN UPDATE 
		SET CD_CENTRO		=ITM.WERKS, 
			CD_LGORT		=ITM.LGORT,
			CD_BPRME		=ITM.BPRME,
			NU_MENGE		=ITM.MENGE, 
			CD_MEINS		=ITM.MEINS, 
		   	VL_NETPR		=ITM.NETPR,
		   	VL_BRTWR		=ITM.BRTWR,
		   	VL_PEINH		=ITM.PEINH, 
		   	VL_NETWR		=ITM.NETWR, 
		   	FL_LOEKZ		=ITM.LOEKZ, 
		   	FL_STATUS		=ITM.STATUS, 
		   	FL_ELIKZ		=ITM.ELIKZ,  
		   	FE_BEDAT		=ITM.AEDAT,
		   	NU_UMREZ		=ITM.UMREZ,
		   	FL_FUENTE		=ITM.FL_FUENTE
	WHEN NOT MATCHED THEN INSERT  
		  (CD_EBELN, CD_ITEM, CD_EJERCICIO, CD_PERIODO, CD_DW_MATERIAL, CD_DW_EMPRESA, CD_CENTRO, CD_LGORT, NU_MENGE, CD_MEINS, 
		   VL_NETPR, VL_BRTWR,  VL_PEINH, VL_NETWR, FL_LOEKZ, FL_STATUS, FL_ELIKZ,  FE_BEDAT, NU_UMREZ, CD_BPRME, FL_FUENTE)
	VALUES(ITM.EBELN, ITM.EBELP, ITM.CD_EJERCICIO, ITM.CD_PERIODO, ITM.CD_DW_MATERIAL, 28,ITM.WERKS,ITM.LGORT,ITM.MENGE,ITM.MEINS,
		   ITM.NETPR,ITM.BRTWR, ITM.PEINH,ITM.NETWR,ITM.LOEKZ,ITM.STATUS,ITM.ELIKZ,ITM.AEDAT, ITM.UMREZ,ITM.BPRME, ITM.FL_FUENTE);
	COMMIT;	   

	--Para llevar un control de posiciones cargadas, se establece la cantidad de posiciones en los documentos MM
	MERGE INTO DIM_COMPRA D 
	USING ( SELECT EBELN, Count(EBELP) Cant
			FROM :Compras 
			GROUP BY EBELN) DET 
	ON DET.EBELN = D.CD_EBELN
	WHEN MATCHED THEN UPDATE SET NU_ITEMS = Cant; 
	COMMIT;	   
	
	INSERT INTO ETL_CONTROL_CARGUE(TABLA,TIPO_CARGA,FECHA_CARGA,BUKRS,GJAHR,BLART,BELNR_DESDE,BELNR_HASTA,ULTIMA_FECHA,REGISTROS_PROCESADOS)
	select 'FT_COMPRA_EKPO',:pTipoCarga,add_seconds(now(),-18000),'6A00',Max(CD_EJERCICIO),'',Min(EBELN),Max(EBELN),Max(F.ABDAT),Count(EBELN)
	from :Compras F ;
	
	COMMIT;

	Entrega_Finalizada =	SELECT	STG.EBELN, STG.EBELP, 
									cast(TO_VARCHAR(DIM.FE_AEDAT,'YYYYMM') as int) PERIODO, 
									cast(TO_VARCHAR(DIM.FE_AEDAT,'YYYY') as smallint) EJERCICIO
							FROM STG_ABAP_EKPO STG
							INNER JOIN DIM_COMPRA DIM 
								ON DIM.CD_EBELN = STG.EBELN 
							WHERE STG.ELIKZ='X' 				--Entrega Finalizada
							AND NOT DIM.CD_EKGRP = 'KZZ'		--Se excluyen los traslados de mercancía
							AND TO_VARCHAR(DIM.FE_AEDAT,'YYYYMM') =  :pPeriodo
							GROUP BY STG.EBELN, STG.EBELP, TO_VARCHAR(DIM.FE_AEDAT,'YYYYMM'), TO_VARCHAR(DIM.FE_AEDAT,'YYYY');
							
	--Actualización de la mercancía recibida según el historial de pedido FT_COMPRA_INVENTARIO (Fuente Original: Tabla MSEG)
	--Se actualizan las compras marcadas con la entrega final ELIKZ ='X'
	Recibido =	SELECT 	FT.CD_EBELN, 
						FT.CD_EBELP,
						STG.EJERCICIO,
						SUM(CASE WHEN FT."FL_SHKZG"='H' THEN FT."NU_MENGE"*-1 ELSE FT."NU_MENGE" END) CANT_RECIBIDA,
						Max(FT.FE_FECHA) FECHA_CONTABILIZACION_DOC 
				FROM FT_COMPRA_INVENTARIO FT
				INNER JOIN :Entrega_Finalizada STG 
					ON STG.EBELN = FT.CD_EBELN 
					AND STG.EBELP = FT.CD_EBELP
					AND STG.PERIODO = FT.CD_PERIODO
				WHERE FT.CD_PERIODO =  :pPeriodo
				GROUP BY STG.EJERCICIO, FT.CD_PERIODO,FT.CD_EBELN, FT.CD_EBELP;
			
	MERGE INTO FT_COMPRA PARTITION(:pPart_ID) COMPRA
	USING :Recibido DET 
		ON DET.CD_EBELN  = COMPRA.CD_EBELN  
		AND DET.CD_EBELP = COMPRA.CD_ITEM
	WHEN MATCHED THEN UPDATE 
		SET NU_RECIBIDO 	  = CANT_RECIBIDA,
			FE_ULTIMA_ENTREGA = FECHA_CONTABILIZACION_DOC;
	COMMIT;
  
	--Para llevar un control de posiciones cargadas, se establece la cantidad de posiciones en los documentos MM
	MERGE INTO DIM_COMPRA D 
	USING ( SELECT CD_EBELN, EJERCICIO, Count(CD_EBELP) Cant
			FROM :Recibido 
			GROUP BY CD_EBELN,EJERCICIO) DET 
	ON DET.CD_EBELN = D.CD_EBELN
	AND DET.EJERCICIO = D.CD_EJERCICIO
	WHEN MATCHED THEN UPDATE SET NU_ITEMS_RECIBIDO = Cant; 	
END