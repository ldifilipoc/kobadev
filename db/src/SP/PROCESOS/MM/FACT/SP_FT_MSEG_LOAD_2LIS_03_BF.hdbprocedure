PROCEDURE "SP_FT_MSEG_LOAD_2LIS_03_BF"(pPeriodo INT, pPart_ID SMALLINT)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   AS
BEGIN
   /*************************************
	Carga de inventario de fuente 2LIS_03_BF
	Fecha de Creación: 30/03/2020
	Fecha de Modificación: 02/04/2020
	Creado por: CORG-MREDONDO
	Modifica:
	Motivo cambio:	Manejo de Deltas

	Stage table: STG_2LIS_03_BF
	Hecho destino: FT_COMPRA_INVENTARIO, FT_MSEG
	
   *************************************/

   	--Años que cambiaron
	DECLARE CURSOR DocMM_Ejercicio FOR
	SELECT ETl.PERIODO EJERCICIO,ETL.PART_ID
	FROM STG_2LIS_03_BF 
	INNER JOIN ETL_PARTICIONES ETL 
			ON ETL.PERIODO = MJAHR
			AND ETL.TABLA = 'DIM_DOCMM'
	GROUP BY ETl.PERIODO,ETL.PART_ID;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
       SELECT ::SQL_ERROR_CODE, ::SQL_ERROR_MESSAGE FROM TDUMMY;

	Delta_Mov = 	SELECT  DIM.CD_DW_MKPF, STG.ZEILE CD_ITEM,TO_VARCHAR(DIM.FE_BUDAT,'YYYYMM') CD_PERIODO,28 EMPRESA, MAT.CD_DW_MATERIAL, COALESCE (CB.CD_DW_CEBE,0) CD_DW_CEBE, COALESCE (CC.CD_DW_CECO,0) CD_DW_CECO, COALESCE (P.CD_DW_CUENTA,0) CD_DW_CUENTA, COALESCE (B2.CD_DW_BP,0) CD_DW_KUNNR, COALESCE (B1.CD_DW_BP,0) CD_DW_LIFNR,
							STG.WERKS CD_CENTRO, STG.BWART,STG.LGORT,STG.WAERS, STG.MEINS,STG.ERFME,STG.EBELN,STG.EBELP,STG.SHKZG, STG.BUDAT, STG.MENGE,STG.ERFMG,STG.DMBTR,STG.BNBTR, TO_VARCHAR(DIM.FE_BUDAT,'YYYY') EJERCICIO, STG.MBLNR , DIM.FE_BUDAT, STG.LIFNR, STG.KUNNR
					FROM STG_2LIS_03_BF STG 
					INNER JOIN DIM_DOCMM DIM 			ON DIM.CD_MBLNR = STG.MBLNR 
					INNER JOIN DIM_MATERIAL MAT 		on MAT.CD_MATERIAL = STG.MATNR 
					LEFT JOIN DIM_CEBE_PRCTR CB 		on CB.CD_CEBE = STG.PRCTR
					LEFT JOIN DIM_CECO CC 				on CC.CD_CECO = STG.KOSTL
					LEFT JOIN DIM_CUENTA P 				on P.CD_CUENTA = STG.SAKTO
					LEFT JOIN DIM_BPARTNER B1 			on B1.CD_BP = STG.LIFNR AND B1.CD_CLASE='P'
					LEFT JOIN DIM_BPARTNER B2 			on B2.CD_BP = STG.KUNNR AND B2.CD_CLASE='C'
					WHERE BSTAUS='A' AND TO_VARCHAR(DIM.FE_BUDAT,'YYYYMM') = :pPeriodo
					AND DIM.ITEMS<1; 
						
	INSERT INTO FT_MSEG
		   (CD_DW_MKPF, CD_ITEM, CD_PERIODO, CD_DW_EMPRESA, CD_DW_MATERIAL, CD_DW_CEBE, CD_DW_CECO, CD_DW_CUENTA, CD_DW_KUNNR, CD_DW_LIFNR, CD_LFBNR,
			CD_CENTRO, CD_BWART, CD_LGORT, CD_WAERS,CD_MEINS,CD_ERFME,  CD_EBELN, CD_EBELP, FL_SHKZG, FE_FECHA,  NU_MENGE, NU_ERFMG,  VL_DMBTR, VL_BNBTR, CD_LIFNR, CD_KUNNR)
	SELECT MOV.CD_DW_MKPF, MOV.CD_ITEM, MOV.CD_PERIODO, MOV.EMPRESA, MOV.CD_DW_MATERIAL, MOV.CD_DW_CEBE, MOV.CD_DW_CECO, MOV.CD_DW_CUENTA, MOV.CD_DW_KUNNR, MOV.CD_DW_LIFNR,'',
			MOV.CD_CENTRO, MOV.BWART,MOV.LGORT,MOV.WAERS, MOV.MEINS,MOV.ERFME,MOV.EBELN,MOV.EBELP,MOV.SHKZG, MOV.BUDAT, MOV.MENGE,MOV.ERFMG,MOV.DMBTR,MOV.BNBTR, MOV.LIFNR, MOV.KUNNR
	FROM :Delta_Mov MOV	;
	COMMIT;
	--Para llevar un control de posiciones cargadas, se establece la cantidad de posiciones en los documentos MM
	MERGE INTO DIM_DOCMM PARTITION(:pPeriodo) DIM 
	USING (	SELECT MBLNR, EMPRESA, Count(MBLNR) Cant, EJERCICIO 
			FROM :Delta_Mov 
			GROUP BY MBLNR, EMPRESA, EJERCICIO) DET 
	ON  DIM.CD_MBLNR 	 = DET.MBLNR 
	AND DIM.CD_EJERCICIO = DET.EJERCICIO
	WHEN MATCHED THEN UPDATE 
	SET CD_DW_EMPRESA = EMPRESA, 
		ITEMS = Cant;
	COMMIT;
	--Se borran los items cargados del periodo
	DELETE FROM STG_2LIS_03_BF WHERE EBELN = '' AND MBLNR IN (SELECT CD_MBLNR FROM DIM_DOCMM WHERE ITEMS >0);

	INSERT INTO ETL_CONTROL_CARGUE(TABLA,TIPO_CARGA,FECHA_CARGA,BUKRS,GJAHR,BLART,BELNR_DESDE,BELNR_HASTA,ULTIMA_FECHA,REGISTROS_PROCESADOS)
	select 'FT_MSEG_2LIS_03_BF','D',add_seconds(now(),-18000),'6A00',Max(EJERCICIO),'',Min(MBLNR),Max(MBLNR),Max(F.FE_BUDAT),Count(MBLNR)
	from :Delta_Mov F ;

	COMMIT;
	
END