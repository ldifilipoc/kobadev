PROCEDURE "SP_STG_EKKO_LOAD_V001"( )
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   AS
BEGIN
   /*************************************
       Inserta los encabezados de los documentos de compra, de la tabla EKKO par a los últimos 2 días
   *************************************/
   
	DECLARE FECHA_INICIO DATE = ADD_DAYS(CURRENT_DATE, -1);
	DECLARE FECHA_FIN DATE = CURRENT_DATE;
	DECLARE FECHA_INICIO_V1 NVARCHAR(8);
	DECLARE FECHA_FIN_V1 NVARCHAR(8);
	Declare V_SQL NVARCHAR(2000);

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
       SELECT ::SQL_ERROR_CODE, ::SQL_ERROR_MESSAGE FROM TDUMMY;
       
	FECHA_INICIO_V1 = TO_NVARCHAR(TO_DATE(:FECHA_INICIO), 'YYYYMMDD');
	FECHA_FIN_V1 = TO_NVARCHAR(TO_DATE(:FECHA_FIN), 'YYYYMMDD');
	
	--Se ajusta query de extracción
	V_SQL = 'INSERT INTO KOBA_HDI_DB_1.STG_ABAP_EKKO (EBELN,BUKRS,BSTYP,BSART,BSAKZ,LOEKZ,STATU,AEDAT,ERNAM,LIFNR,EKORG,BEDAT,LLIEF,KUNNR,AUTLF,VERKF,RESWK,LPONR,EKGRP,WEAKT,KNUMV,KALSM) '||
			'SELECT EBELN,BUKRS,BSTYP,BSART,BSAKZ,LOEKZ,STATU,AEDAT,ERNAM,LIFNR,EKORG,BEDAT,LLIEF,KUNNR,AUTLF,VERKF,RESWK,LPONR,EKGRP,WEAKT,KNUMV,KALSM '||
			'FROM KOBA_HDI_DB_1.VT_ABAP_EKKO '||
			'WHERE BUKRS='''||'6A00'||''' AND AEDAT>='''||:FECHA_INICIO_V1||''' AND AEDAT<='''||  :FECHA_FIN_V1 ||'''';
			
	EXECUTE IMMEDIATE V_SQL;
	COMMIT;

	--En la actualización de la cabecera de la compra se tiene en cuenta el consecutivo y la fecha de creación para la búsqueda, por si se reinicia el consecutivo de la compra.
	--La llave de la tabla DIM_COMPRA es EBELN y CD_EJERCICIO que corresponde al año de creación del documento de compra.
	--Se utiliza un MERGE porque se detectó que es posible que cambie algún campo del encabezado de la compra y la cantidad de registros lo permite.
	
	MERGE INTO DIM_COMPRA DIM 
		USING STG_ABAP_EKKO STG
			ON  DIM.CD_EBELN = STG.EBELN 
	WHEN MATCHED THEN UPDATE SET 
		CD_LIFNR = LIFNR,CD_LLIEF = LLIEF,CD_KUNNR = KUNNR,CD_BSART = BSART,CD_RESWK = RESWK,FL_BSTYP = BSTYP,
		FL_BSAKZ = BSAKZ,FL_LOEKZ = LOEKZ,FL_STATU = STATU,FL_AUTLF = AUTLF,FE_BEDAT = BEDAT, FE_AEDAT = AEDAT,
		CD_LPONR = LPONR,CD_EKGRP = EKGRP,CD_WEAKT = WEAKT,CD_VERKF = VERKF, CD_KNUMV = KNUMV, CD_KALSM = KALSM, NM_ERNAM = ERNAM
	WHEN NOT MATCHED THEN INSERT (CD_EBELN,CD_EJERCICIO,CD_EKORG,CD_LIFNR,CD_LLIEF,CD_KUNNR,CD_BSART,CD_RESWK,FL_BSTYP,
		FL_BSAKZ,FL_LOEKZ,FL_STATU,FL_AUTLF,FE_AEDAT,FE_BEDAT,NM_ERNAM,CD_LPONR,CD_EKGRP,CD_WEAKT,CD_VERKF, CD_KNUMV, CD_KALSM)
		VALUES (EBELN,substring(AEDAT,1,4),EKORG,LIFNR,LLIEF,KUNNR,BSART,RESWK,BSTYP,
		BSAKZ,LOEKZ,STATU,AUTLF,AEDAT,BEDAT,ERNAM,LPONR,EKGRP,WEAKT,VERKF, KNUMV, KALSM);
	COMMIT;

END