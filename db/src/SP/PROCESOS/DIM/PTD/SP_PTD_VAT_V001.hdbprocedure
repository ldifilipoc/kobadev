PROCEDURE "SP_PTD_VAT_V001"()
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   AS
BEGIN
    Declare pEmpresa smallint=28;
    Declare Periodo varchar(7);
    Declare Periodo1 varchar(7);
    Declare Periodo2 varchar(7);
    Declare pBUKRS_L VARCHAR(4)='6A0L';
	Declare pDESDE1 DATE;
	Declare pHASTA2 DATE;
	Declare pBUKRS VARCHAR(4)= '6A00';
	Declare Ejercicio smallint;
	
	select	add_months("DESDE2",-1) DESDE1, "HASTA2", CD_PERIODO1, CD_PERIODO2, LEFT(CD_PERIODO1,4)
	into pDESDE1,pHASTA2, Periodo1, Periodo2, Ejercicio
	from "DIM_FISPER" where BUKRS=:pBUKRS_L;

	MERGE INTO DIM_DOCFI DOC --Documentos del VAT que aun no tienen CEBE asignado, Periodo anterior
	USING (
			select  B.CD_DW_BKPF, Max(F.CD_DW_CEBE) CEBE_DOC
			from "FT_FIGLITEM" F 
			inner join DIM_DOCFI B on F.CD_DW_BELNR = B.CD_DW_BKPF
			inner join ETL_TRADUCCION ETL ON B.CD_BLART = ETL.CD_DIMENSION AND ETL.CD_TABLA=1
			where F.CD_PERIODO = :Periodo1
			AND (B.CD_DW_CEBE =0 OR B.CD_DW_CEBE IS NULL)
			group by B.CD_DW_BKPF,  B.CD_DW_CEBE) DET 
		ON DOC.CD_DW_BKPF = DET.CD_DW_BKPF
	WHEN MATCHED AND DOC.CD_DW_CEBE IS NULL THEN UPDATE SET DOC.CD_DW_CEBE = DET.CEBE_DOC;
	
	MERGE INTO DIM_DOCFI DOC --Documentos del VAT que aun no tienen CEBE asignado, periodo actual
	USING (
			select  B.CD_DW_BKPF, Max(F.CD_DW_CEBE) CEBE_DOC
			from "FT_FIGLITEM" F 
			inner join DIM_DOCFI B on F.CD_DW_BELNR = B.CD_DW_BKPF
			inner join ETL_TRADUCCION ETL ON B.CD_BLART = ETL.CD_DIMENSION AND ETL.CD_TABLA=1
			where F.CD_PERIODO = :Periodo2
			AND (B.CD_DW_CEBE =0 OR B.CD_DW_CEBE IS NULL)
			group by B.CD_DW_BKPF,  B.CD_DW_CEBE) DET 
		ON DOC.CD_DW_BKPF = DET.CD_DW_BKPF
	WHEN MATCHED AND DOC.CD_DW_CEBE IS NULL THEN UPDATE SET DOC.CD_DW_CEBE = DET.CEBE_DOC;
	
	MERGE INTO DIM_DOCFI DIM 
		USING DIM_CEBE_PRCTR CB
			ON CB.CD_DW_CEBE = DIM.CD_DW_CEBE
			AND DIM.CD_EJERCICIO = :Ejercicio		
	WHEN MATCHED AND DIM.CD_CEBE IS NULL 
	THEN UPDATE SET DIM.CD_CEBE = CB.CD_CEBE;

	DELETE FROM FT_VAT WHERE FE_FISCPER between :pDESDE1 and :pHASTA2;
	
	VAT =	select :pEmpresa CD_DW_EMPRESA,C."CD_DW_CUENTA",P.CD_DW_CEBE, LAST_DAY(F.FE_BUDAT) FE_FISCPER,B.CD_BLART, Sum(F."VL_HSL"*100) VL_TURNOVER
			from "FT_FIGLITEM" F 
			inner join DIM_DOCFI B on F.CD_DW_BELNR = B.CD_DW_BKPF
			inner join ETL_TRADUCCION ETL ON B.CD_BLART = ETL.CD_DIMENSION AND ETL.CD_TABLA=1
			inner join DIM_CUENTA C on C.CD_DW_CUENTA = F.CD_DW_CUENTA AND C.CD_CONCEPTO='KPI0101'
			inner join DIM_CEBE_PRCTR P on B.CD_DW_CEBE= P.CD_DW_CEBE --Se hace Join con el CEBE en la cabecera del documento, debido a que no todas las cuentas tienen CEBE, por lo tanto se toma la l√≠nea que tenga CEBE y se actualiza el encabezado.
			where F."FE_BUDAT" between :pDESDE1 and :pHASTA2
			group by C."CD_DW_CUENTA",P.CD_DW_CEBE,LAST_DAY(F.FE_BUDAT),B.CD_BLART;
	
	merge into "FT_VAT" V
	using :VAT S ON S.CD_DW_EMPRESA = V.CD_DW_EMPRESA 
		and S.CD_DW_CUENTA = V.CD_DW_CUENTA 
		and S.CD_DW_CEBE = V.CD_DW_CEBE
		and S.CD_BLART = V.CD_BLART
		and S.FE_FISCPER = V.FE_FISCPER
	when matched then update set V.VL_TURNOVER = S.VL_TURNOVER
	when not matched then insert ("CD_DW_EMPRESA","CD_DW_CUENTA","CD_DW_CEBE","FE_FISCPER","CD_BLART","VL_TURNOVER")
	values (S."CD_DW_EMPRESA",S."CD_DW_CUENTA",S."CD_DW_CEBE",S."FE_FISCPER",S."CD_BLART",S."VL_TURNOVER");
	
	insert into ETL_CONTROL_CARGUE(TABLA,FECHA_CARGA,BUKRS,GJAHR,BELNR_DESDE,BELNR_HASTA,TIMESTMP_DESDE,TIMESTMP_HASTA,ULTIMA_FECHA,REGISTROS_PROCESADOS)
	select 'FT_VAT',now(),:pBUKRS,Year(Max(S.FE_FISCPER)),'','',0,0,Max(S.FE_FISCPER),Count(*)
	from :VAT S;
	COMMIT;
	
END 