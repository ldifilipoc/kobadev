PROCEDURE "SP_DIM_CLIENTE_EMPRESA_LOAD"( )
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   AS
BEGIN
   	declare ULTIMA_FECHA nvarchar(8);
   	declare Cantidad_Inicial int;
   	declare Cantidad_Final int;
   	declare Ultimo_ERDAT VARCHAR(10);
   	
	--DECLARE EXIT HANDLER FOR SQLEXCEPTION
    --   SELECT ::SQL_ERROR_CODE, ::SQL_ERROR_MESSAGE FROM TDUMMY;

	SELECT Count(CD_CLIENTE) INTO Cantidad_Inicial
	FROM DIM_CLIENTE_EMPRESA;

	-------------------------------------------------	
	--Actualización de Clientes de KOBA
	-------------------------------------------------

	KNB1 = SELECT	KUNNR CLIENTE, BUKRS SOCIEDAD, AKONT CUENTA, FDGRV GRUPO_TESORERIA, PERNR NUM_PERSONAL, ZTERM CONDICIONES_P, ERDAT  FECHA_CREACION, 
					ZWELS VIA_PAGO, INTAD CORREO_TESORERIA, TLFXS IDENTIFICACION_EXTERIOR, 'C' FL_CLASE, ERNAM USUARIO_CREADOR, BEGRU GRUPO_AUTORIZACION
		   FROM VT_ABAP_KNB1
		   WHERE BUKRS ='6A00';
		   
	MERGE INTO DIM_CLIENTE_EMPRESA C
	USING :KNB1 K 
		ON C.CD_CLIENTE 		= K.CLIENTE 
		AND C.CD_ORGANIZACION	= K.SOCIEDAD
		AND C.FL_CLASE			= K.FL_CLASE
	WHEN NOT MATCHED THEN 
	INSERT(CD_CLIENTE,CD_ORGANIZACION,CD_CANAL,CD_SECTOR,USUARIO_CREADOR,FL_CLASE, FECHA_CREACION, GRUPO_AUTORIZACION)
	VALUES(K.CLIENTE,K.SOCIEDAD,'','', K.USUARIO_CREADOR,K.FL_CLASE, K.FECHA_CREACION, K.GRUPO_AUTORIZACION);
	COMMIT;

    --KNVV(Customer Master Sales Data) 0CUST_SALES (Relación Cliente -  Canal -Sector)
	KNVV =	SELECT	KUNNR CD_CLIENTE, VKORG CD_ORGANIZACION, VTWEG CD_CANAL, SPART CD_SECTOR, ERNAM USUARIO_CREADOR, BEGRU GRUPO_AUTORIZACION,
					KDGRP GRUPO_CLIENTE, BZIRK CD_DISTRITO, KONDA GRUPO_PRECIOS, VKBUR OFICINA, ERDAT FECHA_CREACION, PLTYP LISTA_PRECIO, 
					ZTERM CONDICIONES_PAGO, VSBED CONDICION_EXPEDICION, WAERS MONEDA, 'C' FL_CLASE
			FROM VT_ABAP_KNVV
			WHERE VKORG ='6A00';

	KNVV_Primer_Canal = SELECT CD_CLIENTE, CD_ORGANIZACION, Min(CD_CANAL) CD_CANAL, Min(CD_SECTOR) CD_SECTOR, FL_CLASE
						FROM :KNVV
						GROUP BY CD_CLIENTE, CD_ORGANIZACION, FL_CLASE;
						
	--Para clientes que solo tienen un canal o sector, se establece al primero siempre y cuando sea un cliente que ha sido insertado nuevo por el INSERT inicial, es decir CD_CANAL=''
	MERGE INTO DIM_CLIENTE_EMPRESA C		
	USING :KNVV_Primer_Canal K 
		ON C.CD_CLIENTE 		= K.CD_CLIENTE 
		AND C.CD_ORGANIZACION	= K.CD_ORGANIZACION 
		AND C.FL_CLASE			= K.FL_CLASE 
	WHEN MATCHED AND C.CD_CANAL='' THEN UPDATE 
	SET C.CD_CANAL	=K.CD_CANAL, 
		C.CD_SECTOR	=K.CD_SECTOR;

	--Para clientes con más de un canal o sector, se crea el registro o se actualiza si ya existe		
	MERGE INTO DIM_CLIENTE_EMPRESA C
	USING :KNVV K ON C.CD_CLIENTE = K.CD_CLIENTE 
					AND C.CD_ORGANIZACION	= K.CD_ORGANIZACION 
					AND C.CD_CANAL			= K.CD_CANAL
					AND C.CD_SECTOR			= K.CD_SECTOR
					AND C.FL_CLASE			= K.FL_CLASE 
	WHEN MATCHED THEN UPDATE 
	SET C.GRUPO_CLIENTE	=K.GRUPO_CLIENTE, 
		C.CD_DISTRITO	=K.CD_DISTRITO, 
		C.GRUPO_PRECIOS =K.GRUPO_PRECIOS, 
		C.OFICINA		=K.OFICINA
	WHEN NOT MATCHED THEN 
	INSERT(CD_CLIENTE,CD_ORGANIZACION,CD_CANAL,CD_SECTOR,USUARIO_CREADOR,FL_CLASE, FECHA_CREACION, GRUPO_CLIENTE, CD_DISTRITO, GRUPO_PRECIOS, OFICINA, GRUPO_AUTORIZACION)
	VALUES(K.CD_CLIENTE,K.CD_ORGANIZACION,K.CD_CANAL,K.CD_SECTOR, K.USUARIO_CREADOR,K.FL_CLASE, K.FECHA_CREACION,K.GRUPO_CLIENTE, K.CD_DISTRITO, K.GRUPO_PRECIOS, K.OFICINA, K.GRUPO_AUTORIZACION);
		
	COMMIT;

	--KNVP (Customer Master Partner Functions) 
	KNVP =	SELECT "KUNNR","VKORG","VTWEG","SPART","PARVW","PARZA","KUNN2",MANDT 
			FROM "VT_ABAP_KNVP"
			WHERE VKORG ='6A00';

	MERGE INTO STG_ABAP_KNVP K
	USING :KNVP KN 
		ON K.KUNNR		=KN.KUNNR 
		AND K.VKORG		=KN.VKORG 
		AND K.VTWEG		=KN.VTWEG 
		AND K.SPART		=KN.SPART 
		AND K.PARVW		=KN.PARVW 
		AND K.PARZA		=KN.PARZA
	WHEN MATCHED THEN UPDATE SET K.KUNN2=KN.KUNN2
	WHEN NOT MATCHED THEN 
	INSERT (MANDT,"KUNNR","VKORG","VTWEG","SPART","PARVW","PARZA","KUNN2")
	VALUES (KN.MANDT,KN."KUNNR",KN."VKORG",KN."VTWEG",KN."SPART",KN."PARVW",KN."PARZA",KN."KUNN2");
	COMMIT;


	-------------------------------------------------	
	--Actualización de Proveedores de KOBA
	-------------------------------------------------
	
	
	LFB1 =	SELECT	LIFNR CD_CLIENTE, BUKRS CD_ORGANIZACION, '0' CD_CANAL, '0' CD_SECTOR, ERNAM USUARIO_CREADOR, BEGRU GRUPO_AUTORIZACION, 'P' FL_CLASE,
					'' GRUPO_CLIENTE, '' CD_DISTRITO, '' GRUPO_PRECIOS, '' OFICINA, ERDAT FECHA_CREACION, AKONT CD_CUENTA, FDGRV GRUPO_TESORERIA,
					ALTKN NUM_REGISTRO_ANTERIOR, ZTERM CONDICIONES_PAGO, INTAD CORREO_TESORERIA, TLFXS IDENTIFICACION_EXTERIOR, PERNR NUM_PERSONAL
			FROM VT_ABAP_LFB1
			WHERE BUKRS = '6A00';
	
	MERGE INTO DIM_CLIENTE_EMPRESA C
	using :LFB1 K ON C.CD_CLIENTE = K.CD_CLIENTE 
					AND C.CD_ORGANIZACION = K.CD_ORGANIZACION 
					AND C.CD_CANAL = K.CD_CANAL 
					AND C.CD_SECTOR =K.CD_SECTOR
					AND C.FL_CLASE  =K.FL_CLASE
	WHEN MATCHED THEN UPDATE SET 
			C.GRUPO_AUTORIZACION	=K.GRUPO_AUTORIZACION,
			C.CD_DISTRITO			=K.CD_DISTRITO
	WHEN NOT MATCHED THEN 
	INSERT ("CD_CLIENTE","CD_ORGANIZACION","CD_CANAL","CD_SECTOR","USUARIO_CREADOR","FECHA_CREACION",
			"GRUPO_AUTORIZACION","GRUPO_CLIENTE","CD_DISTRITO","GRUPO_PRECIOS","OFICINA", "FL_CLASE")
	VALUES (K."CD_CLIENTE",K."CD_ORGANIZACION",K."CD_CANAL",K."CD_SECTOR",K."USUARIO_CREADOR",K."FECHA_CREACION",
			K."GRUPO_AUTORIZACION",K."GRUPO_CLIENTE", K."CD_DISTRITO",K."GRUPO_PRECIOS",K."OFICINA", K.FL_CLASE);
	COMMIT;
	
	--LFM1 SAP Vendor master record purchasing organization data Table and data
	LFM1 = SELECT LIFNR CD_CLIENTE, EKORG CD_ORGANIZACION, WAERS MONEDA, ZTERM CONDICIONES_P, ERDAT FECHA_CREACION ,ERNAM USUARIO_CREADOR, 'P' FL_CLASE
		   FROM VT_ABAP_LFM1
		   WHERE EKORG ='6A00';

	MERGE INTO DIM_CLIENTE_EMPRESA C
	USING :LFM1 K 
		ON C.CD_CLIENTE = K.CD_CLIENTE 
		AND C.CD_ORGANIZACION = K.CD_ORGANIZACION 
		AND C.FL_CLASE = K.FL_CLASE
	WHEN matched THEN UPDATE 
	SET 	C.FECHA_CREACION	=K.FECHA_CREACION,
			C.USUARIO_CREADOR	=K.USUARIO_CREADOR ;

	SELECT Count(CD_CLIENTE) INTO Cantidad_Final
	FROM DIM_CLIENTE_EMPRESA;
	
	SELECT Max(FECHA_CREACION) INTO Ultimo_ERDAT
	FROM :KNB1;
	--Se comenta esta instrucción, no se pueden borrar datos de la tabla DIM_BPARTNER porque tiene un consecutivo y se perdería, creando nuevos consecutivos en cada insert.		
	--DELETE FROM DIM_BPARTNER WHERE CD_BP IN (SELECT CD_BP FROM DIM_BPARTNER A 
	--LEFT JOIN DIM_CLIENTE_EMPRESA B ON A.CD_BP=B.CD_CLIENTE WHERE B.CD_ORGANIZACION IS NULL);

	insert into ETL_CONTROL_CARGUE(TABLA,FECHA_CARGA,BUKRS,GJAHR,BELNR_DESDE,BELNR_HASTA,TIMESTMP_DESDE,TIMESTMP_HASTA,ULTIMA_FECHA,REGISTROS_PROCESADOS)
	values ('DIM_CLIENTE_EMPRESA',now(),'0000',substr(:Ultimo_ERDAT,0,4),'','',0,0,:Ultimo_ERDAT, (:Cantidad_Final - :Cantidad_Inicial)); --Nuevos Registros;
	
END