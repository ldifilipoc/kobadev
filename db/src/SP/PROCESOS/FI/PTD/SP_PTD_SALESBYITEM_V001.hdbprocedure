PROCEDURE "SP_PTD_SALESBYITEM_V001"()
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   AS
BEGIN
    Declare pEmpresa smallint=28;
    Declare pBUKRS_L VARCHAR(4) = '6A0L';
	Declare pDESDE1 DATE;
	Declare pHASTA2 DATE;
	Declare Periodo INT;
	Declare Periodo1 INT;
	Declare Periodo2 INT;	
	Declare pBUKRS VARCHAR(4) = '6A00';
	Declare Cantidad_Periodos SMALLINT;
	Declare i SMALLINT;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
       SELECT ::SQL_ERROR_CODE, ::SQL_ERROR_MESSAGE FROM TDUMMY;
      
   /*************************************
       Sales by Item es un resumen mensual de las ventas, costos, iva, impoconsumo
   *************************************/
    --Posibles campos: add_months("DESDE2",-1) DESDE1,	Last_day(add_months("DESDE2",-1)) "HASTA1",	"DESDE2","HASTA2" into pDESDE1,pHASTA1,pDESDE2,pHASTA2
	select	add_months("DESDE2",-1) DESDE1,	"HASTA2", CD_PERIODO1, CD_PERIODO2 into pDESDE1,pHASTA2, Periodo1, Periodo2
	from "DIM_FISPER" where BUKRS=pBUKRS_L;

	--Si hay dos periodos abiertos, procede con el siguiente periodo
	IF NOT :Periodo1 = :Periodo2 THEN
		IF :Periodo1 <=202101 THEN
			Cantidad_Periodos=1;
			Periodo1 = :Periodo2;
		ELSE 
			Cantidad_Periodos=2;
		END IF;
	ELSE 
		Cantidad_Periodos=1;
	END IF;
	
	FOR i IN 1..:Cantidad_Periodos DO --Proceso para cada periodo
		IF :i= 1 THEN
			Periodo = :Periodo1;
		ELSE 
			Periodo = :Periodo2;
		END IF;
		--Llenado del Sales By Item
		--Se borra antes de cargar para evitar inconsistencias debido a que es posible que carguen ventas una tienda que no debe ser
		delete from "FT_SALESBYITEM" where CD_PERIODO=:Periodo;
		COMMIT;
	
		insert into FT_SALESBYITEM (CD_PERIODO,"CD_DW_EMPRESA","CD_DW_CEBE","CD_DW_MATERIAL","FE_DIA","CD_CENTRO","VL_INGRESO","VL_DEVOLUCION","VL_COSTO","VL_CANTIDAD","VL_IVA","VL_IMPOCONSUMO","VL_AJUSTE")
		select	F.CD_PERIODO, 
				:pEmpresa CD_DW_EMPRESA, 
				COALESCE(H.CD_DW_CEBE,COALESCE(F.CD_DW_CEBE,0)) CD_DW_CEBE,
				F.CD_DW_MATERIAL,
				LAST_DAY(F.FE_BUDAT) FE_DIA,
				F.CD_CENTRO,
				Sum(CASE WHEN C.CD_CUENTA='4135150000' THEN F.VL_WTGBTR*-1 ELSE 0 END) VL_INGRESO,
				Sum(CASE WHEN C.CD_CUENTA='4175350000' THEN F.VL_WTGBTR ELSE 0 END) VL_DEVOLUCION,
				Sum(ifnull(P.VL_COSTO,0)*(-1*F.VL_MBGBTR)) VL_COSTO, 
				Sum(-1*F.VL_MBGBTR) VL_CANTIDAD,  
				Sum((case when C.CD_CUENTA='4175350000' THEN -1 ELSE 1 END)* ifnull(P.VL_IVA,0)) VL_IVA,
				Sum((case when C.CD_CUENTA='4175350000' THEN -1 ELSE 1 END)* ifnull(P.VL_IMPOCONSUMO,0)) VL_IMPOCONSUMO,
				Sum(CASE WHEN C.CD_CUENTA='4175350200' THEN F.VL_WTGBTR ELSE 0 END) VL_AJUSTE
		from "FT_COEP" F
		inner join DIM_CUENTA C 
			on C.CD_DW_CUENTA = F.CD_DW_CUENTA
		inner join DIM_DOCFI H 
			on F.CD_DW_BKPF = H.CD_DW_BKPF
		left join FT_COEP_ZTPOS P 
			ON P.CD_DW_BKPF = F.CD_DW_BKPF AND  P.CD_ITEM =  F.CD_ITEM AND P.CD_PERIODO = F.CD_PERIODO
		where F.CD_PERIODO = :Periodo 
		AND C.CD_CLASE='4' 
		AND H.XREVERSAL = ''
		Group by	F.CD_PERIODO,COALESCE(H.CD_DW_CEBE,COALESCE(F.CD_DW_CEBE,0)),F.CD_DW_MATERIAL,
					F.CD_CENTRO,LAST_DAY(F.FE_BUDAT),Year(F.FE_BUDAT),Month(F.FE_BUDAT);  
		COMMIT;

	END FOR;

	insert into ETL_CONTROL_CARGUE(TABLA,FECHA_CARGA,BUKRS,GJAHR,BELNR_DESDE,BELNR_HASTA,TIMESTMP_DESDE,TIMESTMP_HASTA,ULTIMA_FECHA,REGISTROS_PROCESADOS)
	values ('FT_SALESBYITEM',now(),:pBUKRS,Year(:pDESDE1),'','',0,0,:pHASTA2,0);
	COMMIT;
	
	--Cálculo de los dias en los que la tienda estuvo abierta para el indicador de Conteo tiendas
	Conteo_Tiendas = 
	select	Det.L_DIA FC_PERIODO,
			Det.CD_DW_CEBE,
			11334 CD_DW_CUENTA,
			DIAS/DayOfMonth(CASE WHEN L_DIA>CURRENT_DATE THEN ADD_DAYS(CURRENT_DATE,-1) ELSE L_DIA END) VL_CANTIDAD
	from (	select 	B.CD_DW_CEBE, 
					LAST_DAY(F.FE_BUDAT) L_DIA, 
					Count(Distinct F.FE_BUDAT) DIAS
			from FT_COEP F
			inner join DIM_FISPER P 
				ON P.CD_PERIODO1 = F.CD_PERIODO --Periodo de Cierre de KOBA
			inner join DIM_DOCFI D ON D.CD_DW_BKPF = F.CD_DW_BKPF
			inner join DIM_CEBE_PRCTR B
				ON D.CD_DW_CEBE = B.CD_DW_CEBE 
			where B.CD_JERARQUIA2='STORE_TR' 
				AND F.VL_WTGBTR<>0
				AND F.CD_DW_CUENTA=1441
				AND B.CD_CEBE LiKE '____T_____' 
				AND NOT B.NM_CEBE LIKE '% CEDI%' 
				AND NOT B.NM_CEBE LIKE '%MINITIENDA%' 
				AND NOT B.NM_CEBE LIKE '%TIENDA MOVIL%' 
				AND NOT B.NM_CEBE LIKE '%TIENDA MÓVIL%'
			group by B.CD_DW_CEBE,LAST_DAY(F.FE_BUDAT)) Det;
			
	MERGE INTO FT_KPI FT
	USING :Conteo_Tiendas STG 
		ON STG.FC_PERIODO   = FT.FC_PERIODO
		AND STG.CD_DW_CEBE  = FT.CD_DW_CEBE
		AND STG.CD_DW_CUENTA= FT.CD_DW_CUENTA
	WHEN MATCHED THEN UPDATE SET VL_KPI = STG.VL_CANTIDAD, TIMESTMP = CURRENT_TIMESTAMP
	WHEN NOT MATCHED THEN 
		INSERT (FC_PERIODO, CD_VERSION, CD_DW_CEBE, CD_DW_CECO, CD_DW_MATERIAL, CD_DW_CUENTA, CD_MONEDA,VL_KPI, CD_UNIDAD, VL_CANTIDAD, TIMESTMP, NM_USUARIO)
		VALUES (STG.FC_PERIODO,0, STG.CD_DW_CEBE,0,0, STG.CD_DW_CUENTA,'COP',0, 'ST', STG.VL_CANTIDAD, CURRENT_TIMESTAMP,'');

END