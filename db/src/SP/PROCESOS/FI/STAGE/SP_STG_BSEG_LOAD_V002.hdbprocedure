PROCEDURE "SP_STG_BSEG_LOAD_V002"(pGJAHR VARCHAR(4),pBUKRS VARCHAR(4),pBELNR_DESDE VARCHAR(10), pBELNR_HASTA VARCHAR(10), Part_ID INT)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   AS
BEGIN
   /*************************************
	Carga datos de compensación de documentos requeridos de la BSEG 
	Fecha de Creación:27/06/2021
	Fecha de Modificación:09/09/2021
	Creado por: CORG
	Modifica:CORG 
	Motivo cambio:	Este proceso se crea con el fin de evitar la actualización de la FT_FIGLITEM, ya que por su tamaño sería muy complejo de actualizar
					Actualización de la FT_BSEG_COMPENSADO según compensación requerida en consolidación
					
	Tabla Virtual usada:	VT_ABAP_BSEG
							
	Las virtual table fueron creadas por el replication task para cargue inicial/full
	Stage table: STG_ABAP_BSEG
	Hecho destino: FT_BSEG_COMPENSADO, DIM_DOCFI
   *************************************/
	Declare V_SQL NVARCHAR(2000);
	Declare Rango VARCHAR(200);
	Declare Empresa INT;
	--DECLARE EXIT HANDLER FOR SQLEXCEPTION
    --   SELECT ::SQL_ERROR_CODE, ::SQL_ERROR_MESSAGE FROM TDUMMY;

    V_SQL = 'INSERT INTO KOBA_HDI_DB_1.STG_ABAP_BSEG(BUKRS, BELNR, GJAHR, DOCLN, BUZEI, AUGDT, AUGCP, AUGBL, AGZEI) '||
			'SELECT BUKRS, BELNR, GJAHR, DOCLN, BUZEI, AUGDT, AUGCP, AUGBL, AGZEI '||
			'FROM KOBA_HDI_DB_1.VT_ABAP_BSEG WHERE AUGDT != ''00000000'' AND GJAHR='''||:pGJAHR||''' AND BUKRS='''||:pBUKRS||''' AND BELNR>='''||:pBELNR_DESDE||''' AND BELNR<='''||:pBELNR_HASTA||'''';
	EXECUTE IMMEDIATE V_SQL;
	COMMIT;   

	SELECT CD_DW_EMPRESA INTO Empresa FROM DIM_EMPRESA WHERE CD_EMPRESA = :pBUKRS;
	
	MERGE INTO FT_BSEG_COMPENSADO PARTITION (:Part_ID) FT
	USING 
		(SELECT DOC.CD_DW_BKPF, DOC.CD_DW_EMPRESA, DOC.FE_BUDAT, TO_VARCHAR(DOC.FE_BUDAT,'YYYYMM') CD_PERIODO, DOC.CD_EJERCICIO, TO_INT( STG.DOCLN) CD_DOCNL, STG.DMBTR VL_DMBTR,
				TO_INT(STG.BUZEI) CD_BUZEI, STG.AUGDT FE_AUGDT, STG.AUGCP FE_AUGCP, STG.AUGBL CD_AUGBL, STG.AGZEI CD_AGZEI, CTA.CD_DW_CUENTA CD_DW_HKONT, STG.XREF1, STG.XREF3
		 FROM STG_ABAP_BSEG STG 
		 INNER JOIN DIM_DOCFI DOC 
			ON DOC.CD_BELNR = STG.BELNR 
			AND DOC.CD_EJERCICIO = STG.GJAHR
			AND DOC.CD_DW_EMPRESA= :Empresa
		INNER JOIN DIM_CUENTA CTA 
			ON CTA.CD_CUENTA = STG.HKONT
	    WHERE STG.AUGDT != '00000000') DET 
		ON DET.CD_DW_BKPF  = FT.CD_DW_BELNR 
		AND DET.CD_DW_EMPRESA = FT.CD_DW_EMPRESA
		AND DET.CD_EJERCICIO = FT.CD_EJERCICIO
		AND DET.CD_DOCNL = FT.CD_DOCNL
	WHEN MATCHED AND FT.CD_AUGBL= '' THEN UPDATE SET FT.FE_AUGDT =	DET.FE_AUGDT, FT.FE_AUGCP =  DET.FE_AUGCP, FT.CD_AUGBL = DET.CD_AUGBL, FT.CD_AGZEI = DET.CD_AGZEI
	WHEN NOT MATCHED THEN INSERT (CD_DW_BELNR, CD_DOCNL, CD_BUZEI, CD_EJERCICIO, CD_PERIODO, CD_DW_EMPRESA, FE_BUDAT, FE_AUGDT, FE_AUGCP, CD_AUGBL, CD_AGZEI, CD_DW_HKONT, XREF1, XREF3, VL_DMBTR)
	VALUES (DET.CD_DW_BKPF, DET.CD_DOCNL, DET.CD_BUZEI, DET.CD_EJERCICIO, DET.CD_PERIODO, DET.CD_DW_EMPRESA, DET.FE_BUDAT, 
			DET.FE_AUGDT, DET.FE_AUGCP,DET.CD_AUGBL, DET.CD_AGZEI, DET.CD_DW_HKONT, DET.XREF1, DET.XREF3, DET.VL_DMBTR);	

	COMMIT; 
END