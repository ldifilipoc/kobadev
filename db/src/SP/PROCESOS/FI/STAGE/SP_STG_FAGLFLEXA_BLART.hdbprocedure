PROCEDURE SP_STG_FAGLFLEXA_BLART(pBLART VARCHAR(2))
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   AS
BEGIN
	/*************************************
	Carga de partidas individuales de documentos cargados en el POS. 
	Los documentos del POS tienen como tercero la tienda, por lo tanto no se carga información de tercero.
	Parémtros:	pEmpresa=28 para KOBA
				pBUKRS=6A00 para KOBA
				pTipoCarga='D' para Delta o 'F' para full
				pDesde = Fecha/Hora desde el cual se van a cargar datos, TIMESTMP_DESDE: Ultimo Timestamp ingresado en la FT_FIGLITEM + 1 segundo si es cargue delta
				pHasta = Fecha/Hora hasta el cual se van a cargar datos
				RLDNR = 0L Libro contable
	Fecha de Creación:02/12/2019
	Fecha de Modificación:11/02/2020
	Creado por: CORG-JPIMIENTA
	Modifica:CORG-JPIMIENTA
	Motivo cambio:	11/02/2020	Manejo de Deltas
					05/04/2020	Join que asegura que no se inserten timestamp de partidas individuales cuyo encabezado de documento aun no ha sido creado
								Si alguna partida individual no tiene encabezado no se inserta en la FACT TABLE
	Tabla Virtual usada:	VT_ABAP_FAGLFLEXA (Detalle de partidas individuales)
							
	Las virtual table fueron creadas por el replication task para cargue inicial/full
	Stage table: STG_ABAP_FAGLFLEXA
	Hecho destino: FT_FIGLITEM
	Agendamiento de carga: En SAP CPI-DI, Proceso 2_P_FINANZAS 
	*************************************/
	
	Declare V_SQL NVARCHAR(500);
	Declare Rango VARCHAR(200);
	Declare N int=1;
	Declare M int=0;
	Declare pEmpresa smallint=28;
	Declare pBUKRS VARCHAR(4)='6A00'; 
	Declare pBELNR_DESDE VARCHAR(20);
	Declare pBELNR_HASTA VARCHAR(20);
	Declare pGJAHR VARCHAR(4);
	Declare pTabla VARCHAR(30) = 'FAGLFLEXA';
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
       SELECT ::SQL_ERROR_CODE, ::SQL_ERROR_MESSAGE FROM TDUMMY;
       
	M=0;
	--Existen documentos pendientes?
	select Count(BELNR_DESDE) into M
	from "ETL_CONTROL_CARGUE" 
	where TABLA=:pTabla 
	and BLART = :pBLART 
	and CARGA_POS='P'; --Cargas o rangos de documento POS pendientes 
	--Si hay almenos un registro continua
	
	IF :M > 0 THEN 
		--Se extre 1 rango de documentos pendientes
		select top 1 GJAHR,BLART,BELNR_DESDE,BELNR_HASTA BT 
		into pGJAHR,pBLART,pBELNR_DESDE,pBELNR_HASTA
		from "ETL_CONTROL_CARGUE" 
		where TABLA=:pTabla 
		and BLART = :pBLART 
		and CARGA_POS='P' --Cargas o rangos de documento POS pendientes de ZTFI_DTS_IMP
		order by FECHA_CARGA, BELNR_DESDE;
		
		RANGO= 'WHERE RBUKRS=''6A00'' AND RLDNR=''0L'' AND GJAHR='''||:pGJAHR||''' AND BELNR>='''||:pBELNR_DESDE||''' AND BELNR<='''||:pBELNR_HASTA||'''';
    
		V_SQL= 'INSERT INTO STG_ABAP_FAGLFLEXA(RBUKRS,GJAHR,DOCLN,BELNR,BUZEI,BSCHL,RTCUR,RACCT,RCNTR,PRCTR,HSL,OSL,RWCUR,BUDAT,TIMESTAMP,DRCRK) '||
				'SELECT RBUKRS,GJAHR,DOCLN,BELNR,BUZEI,BSCHL,RTCUR,RACCT,RCNTR,PRCTR,HSL,OSL,RWCUR,BUDAT,TIMESTAMP,DRCRK '||
				'FROM KOBA_HDI_DB_1.VT_ABAP_FAGLFLEXA '||:RANGO;
		EXECUTE IMMEDIATE V_SQL;
		COMMIT;

		--Si la consulta devuelve registros nuevos, inserta la cantidad en la tabla de ETL CONTROL
		select ifnull(Count(*),0) into N from "STG_ABAP_FAGLFLEXA";
		IF :N>0 THEN
			insert into ETL_CONTROL_CARGUE(TABLA,TIPO_CARGA,BLART,FECHA_CARGA,BUKRS,GJAHR,BELNR_DESDE,BELNR_HASTA,TIMESTMP_DESDE,TIMESTMP_HASTA,ULTIMA_FECHA,REGISTROS_PROCESADOS)
			select 'FAGLFLEXA','D',:pBLART,now(),Max(S.RBUKRS),Max(S.GJAHR),Min(S.BELNR),Max(S.BELNR),Min(S."TIMESTAMP"),Max(S."TIMESTAMP"),TO_TIMESTAMP(CAST(Max(S."TIMESTAMP") as VARCHAR(15)),'YYYYMMDDHH24MISS'),Count(S.BELNR)
			from "STG_ABAP_FAGLFLEXA" S;
		END IF;
		COMMIT;
		
	END IF;
	
END